{"version":3,"sources":["utils/translateTextHelpers.ts","hooks/useI18n.ts","components/layout/Page.tsx","components/layout/Container.tsx","config/constants/types.ts","contexts/RefreshContext.tsx","hooks/useRefresh.ts","config/constants/contracts.ts","config/constants/farms.ts","utils/getRpcUrl.ts","utils/web3.ts","utils/addressHelpers.ts","utils/multicall.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","config/constants/pools.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","state/hooks.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","config/index.ts","contexts/BlockContext.tsx","hooks/useBlock.ts","utils/formatBalance.ts","components/layout/Flex.tsx","components/Tags.tsx","views/Pools/components/Card.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Coming.tsx","components/UnlockButton.tsx","components/Label/Label.tsx","hooks/useWeb3.ts","config/constants/ifo.ts","config/constants/index.ts","hooks/useContract.ts","utils/callHelpers.ts","hooks/useStake.ts","hooks/useUnstake.ts","components/Balance.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/OldPastaTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","hooks/useApprove.ts","hooks/useHarvest.ts","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/Pasta.tsx","utils/erc20.ts","hooks/useTokenBalance.ts","views/Home/components/CardValue.tsx","views/Home/components/PizzaStats.tsx","hooks/useFarmsWithBalance.ts","hooks/useAllEarnings.ts","views/Home/components/PizzaHarvestBalance.tsx","views/Home/components/PizzaWalletBalance.tsx","views/Home/components/FarmStakingCard.tsx","utils/lotteryUtils.js","hooks/useGetLotteryHasDrawn.ts","hooks/useBuyLottery.ts","hooks/useTickets.ts","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Home/components/PizzaWinnings.tsx","views/Home/components/LotteryJackpot.tsx","views/Home/components/LotteryCard.tsx","views/Home/components/TotalValueLockedCard.tsx","views/Home/components/EarnAPYCard.tsx","views/Home/components/EarnAssetCard.tsx","hooks/useLotteryTotalPrizesUsd.ts","views/Home/components/WinCard.tsx","views/Home/Home.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/CardHeading.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","utils/compoundApyHelpers.ts","views/Farms/components/FarmCard/ApyCalculatorModal.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/Divider.tsx","views/Farms/Farms.tsx","contexts/PastLotteryDataContext.tsx","hooks/useTimer.ts","utils/getTimePeriods.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Divider.tsx","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","hooks/useAllowance.ts","views/Lottery/components/TicketCard/index.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx","views/Ifos/components/IfoTabButtons/index.tsx","views/Ifos/components/Hero.tsx","views/Ifos/components/IfoCard/IfoCardHeader.tsx","views/Ifos/components/IfoCard/IfoCardProgress.tsx","views/Ifos/components/IfoCard/IfoCardDescription.tsx","views/Ifos/components/IfoCard/IfoCardDetails.tsx","views/Ifos/components/IfoCard/IfoCardTime.tsx","views/Ifos/components/IfoCard/LabelButton.tsx","components/Input/BalanceInput.tsx","views/Ifos/components/IfoCard/ContributeModal.tsx","views/Ifos/components/IfoCard/IfoCardContribute.tsx","views/Ifos/components/IfoCard/index.tsx","views/Ifos/components/Title.tsx","views/Ifos/components/IfoCards.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/PastIfo.tsx","views/Ifos/index.tsx","App.tsx","state/index.ts","Providers.tsx","index.tsx","contexts/Localisation/translationsContext.ts"],"names":["variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","data","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","useContext","TranslationsContext","length","Page","styled","Container","theme","mediaQueries","sm","lg","div","QuoteToken","PoolCategory","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","useEffect","interval","setInterval","a","prev","clearInterval","Provider","value","useRefresh","fastRefresh","slowRefresh","pizza","97","56","pasta","masterChef","pastaChef","wbnb","lottery","lotteryNFT","mulltiCall","busd","chs","hots","kp3rb","usdt","usdc","dai","eth","xchs","cpizza","pizzaRabbits","ifo","farms","pid","lpSymbol","lpAddresses","tokenSymbol","tokenAddresses","quoteTokenSymbol","BNB","quoteTokenAdresses","contracts","BUSD","isCommunity","USDT","USDC","DAI","CHS","PIZZA","tokenDecimal","ETH","nodes","process","getNodeUrl","randomIndex","random","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","getWeb3","getContract","abi","address","contractOptions","Contract","getPizzaAddress","addresses","chainId","getMasterChefAddress","getMulticallAddress","multicall","calls","web3","multi","MultiCallAbi","itf","Interface","calldata","map","call","toLowerCase","encodeFunctionData","name","params","methods","aggregate","returnData","res","i","decodeFunctionResult","fetchFarms","Promise","all","farmsConfig","farmConfig","lpAdress","CHAIN_ID","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","BigNumber","lpTotalInQuoteToken","pow","times","tokenAmount","quoteTokenAmount","masterchefABI","info","totalAllocPoint","allocPoint","_hex","poolWeight","toJSON","tokenPriceVsQuote","multiplier","toString","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmUserDataAsync","dispatch","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","pools","pastaId","tokenName","earnToken","stakingTokenName","stakingTokenAddress","contractAddress","poolCategory","CORE","projectLink","harvest","tokenPerBlock","sortOrder","isFinished","KP3RB","XCHS","fetchPoolsBlockLimits","poolsWithEnd","poolsConfig","filter","p","callsStartBlock","poolConfig","callsEndBlock","pastaChefABI","starts","ends","pizzaPoolConfig","startBlock","endBlock","fetchPoolsTotalStatking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","pizzaABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","bnbPools","nonMasterPools","masterChefContract","masterChefABI","fetchPoolsAllowance","allowances","reduce","acc","pool","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","amount","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingPizza","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","ZERO","useFetchPublicData","useDispatch","blockLimits","totalStakings","liveData","blockLimit","totalStaking","useFarms","useSelector","useFarmFromPid","usePools","stakingTokenBalances","stakingTokenBalance","fetchPoolsUserDataAsync","usePriceBnbBusd","usePricePizzaBusd","bnbPriceUSD","GlobalStyle","createGlobalStyle","colors","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","projectId","parseInt","REACT_APP_CROWDIN_PROJECT_ID","stringTranslationsApi","StringTranslations","token","LanguageContextProvider","setTranslations","storedLangCode","localStorage","getItem","storedLang","getStoredLang","listLanguageTranslations","undefined","fetchTranslationsForSelectedLanguage","then","translationApiResponse","catch","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeCopntext","config","label","icon","href","items","Menu","props","useWallet","connect","reset","pizzaPriceUsd","login","logout","currentLang","langs","setLang","toNumber","links","Wrapper","PageLoader","EXPONENTIAL_AT","DECIMAL_PLACES","PIZZA_PER_BLOCK","BLOCKS_PER_YEAR","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","getBlockNumber","blockNumber","current","useBlock","getBalanceNumber","balance","decimals","displayBalance","dividedBy","getFullDisplayBalance","toFixed","FlexLayout","CoreTag","variant","outline","startIcon","CommunityTag","Card","card","isActive","CardTitle","Balance","Label","textSubtle","DetailPlaceholder","Value","Footer","Coming","TranslateString","style","padding","role","aria-label","src","width","height","alt","as","external","fullWidth","mb","flex","UnlockButton","onPresentConnectModal","useWalletModal","onClick","StyledLabel","useWeb3","ethereum","refEth","setweb3","ifos","id","subTitle","description","launchDate","launchTime","saleAmount","raiseAmount","pizzaToBurn","projectSiteUrl","currency","currencyAddress","releaseBlockNumber","communityFarms","useContract","contract","setContract","useERC20","usePizza","useLottery","useLotteryTicket","lotteryTicket","useMasterchef","usePastaChef","rawAbi","BINANCE","pastaChefBnb","approve","lpContract","options","ethers","constants","MaxUint256","send","from","stake","enterStaking","on","tx","transactionHash","deposit","pastaStake","pastaChefContract","pastaStakeBnb","unstake","leaveStaking","withdraw","pastaUnstake","emergencyWithdraw","pastaEmegencyUnstake","pastahHarvest","pastahHarvestBnb","useStake","onStake","useCallback","txHash","console","PASTAIDS","useUnstake","onUnstake","StyledText","Text","isDisabled","color","textDisabled","fontSize","unit","previousValue","bold","start","end","duration","separator","defaultProps","StyledSpacer","size","Spacer","s","spacing","StyledModalActions","primaryDark","StyledModalAction","ModalActions","l","Children","toArray","child","StyledInputWrapper","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","toLocaleString","DepositModal","onConfirm","onDismiss","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","handleChange","e","currentTarget","handleSelectMax","title","disabled","WithdrawModal","CompoundModal","BalanceRow","Number","Title","ActionLink","OldPastaTitle","hasBalance","target","StyledButton","button","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","COMMUNITY","StyledFooter","StyledDetailsButton","Details","Row","FlexFull","TokenLink","CardFooter","blocksRemaining","blocksUntilStart","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","marginBottom","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","image","apy","stakingLimit","isBnbPool","stakingTokenContract","onApprove","usePastaApprove","isUsingBnb","usePastaStake","isOldPasta","usePastaUnstake","onReward","usePastaHarvest","requestedApproval","setRequestedApproval","Math","PASTA","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","error","display","alignItems","HarvestButton","eq","isNaN","isFinite","PoolTabButtons","useRouteMatch","url","isExact","activeIndex","Hero","Farm","path","poolsWithApy","rewardTokenFarm","stakingTokenFarm","stakingTokenPriceInBNB","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","priceToBnb","totalStakingTokenInPool","partition","finishedPools","openPools","Divider","Flex","exact","orderBy","provider","getAllowance","getTokenBalance","tokenAddress","userAddress","balanceOf","useTokenBalance","setBalance","fetchBalance","CardValue","useCountUp","countUp","update","updateValue","StyledPizzaStats","PizzaStats","totalSupply","setTotalSupply","pizzaContract","supply","fetchTotalSupply","useTotalSupply","burnedBalance","useBurnedBalance","pizzaSupply","useFarmsWithBalance","farmsWithBalances","setFarmsWithBalances","rawResults","results","fetchBalances","useAllEarnings","balances","fetchAllBalances","PizzaHarvestBalance","earningsSum","accum","earning","lineHeight","PizzaWalletBalance","pizzaBalance","StyledFarmStakingCard","Block","CardImage","img","Actions","FarmedStakingCard","balancesWithValue","balanceType","farmPids","harvestPromises","useAllHarvest","farmWithBalance","harvestAllFarms","multiCall","newCalls","slice","concat","multiBuy","lotteryContract","price","numbersList","getTickets","ticketsContract","customLotteryNum","issueIndex","issueIdex","getTicketsAmount","calls1","Array","apply","ticketAbi","tokenIds","calls2","ticketIssues","finalTokenids","ticketIssue","push","calls3","tickets","getLotteryStatus","multiClaim","claimedStatus","unClaimedIds","lotteryAbi","rewards","finanltokenIds","r","getTotalClaim","drawed","calls4","claim","c","sum","getTotalRewards","getMax","maxNumber","getLotteryIssueIndex","getMatchingRewardLength","matchNumber","historyAmount","getWinningNumbers","numbers","historyNumbers","winningNumbers","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","fetchLotteryStatus","useMultiClaimLottery","lotteryTicketContract","onMultiClaim","useTotalRewards","setRewards","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","useWinningNumbers","winngNumbers","setWinningNumbers","useMatchingRewardLength","matchingNumbers","setMatchingNumbers","matchedNumbaers","useTickets","lotteryNumber","setTickets","TicketInput","availableSymbol","BuyTicketModal","setRequestedBuy","maxTickets","onMultiBuy","useMultiBuyLottery","setMax","fetchMax","useMaxNumber","handleBuy","floor","Tips","Announce","Final","PizzaWinnings","LotteryJackpot","lotteryPrizeAmount","maximumFractionDigits","StyledLotteryCard","requesteClaim","setRequestedClaim","handleClaim","onPresentBuy","marginRight","StyledPartnerCard","PartnerCard","CardMidContent","Heading","attrs","EarnAPYCard","farmsLP","bnbPrice","maxAPY","MIN_VALUE","getHighestAPY","activeFarms","calculateAPY","farmsToDisplay","pizzaPriceVsBNB","pizzaRewardPerBlock","pizzaRewardPerYear","dual","pizzaApy","dualApy","rewardPerBlock","plus","animation","justifyContent","activeClassName","mt","EarnAssetCard","latestPools","assets","join","useLotteryTotalPrizesUsd","totalRewards","WinCard","lotteryPrize","round","Cards","BaseLayout","CTACards","Home","FarmStakingCard","LotteryCard","TotalValueLockedCard","ExpandableSectionButton","expanded","getLiquidityUrlPathParts","firstPart","secondPart","StyledLinkExternal","LinkExternal","DetailsSection","bscScanAddress","removed","lpLabel","totalValueFormated","liquidityUrlPathParts","MultiplierTag","CardHeading","isCommunityFarm","farmImage","flexDirection","IconButtonWrapper","StakeAction","rawStakedBalance","mr","HarvestAction","farmPid","useHarvest","rawEarningsBalance","Action","CardActions","useFarmUser","lpAddress","lpName","toUpperCase","isApproved","useApprove","textTransform","pr","calculatePizzaEarnedPerThousandDollars","number","numberOfDays","apyAsDecimal","farmApy","daysAsDecimalOfYear","principal","pizzaPrice","finalAmount","apyModalRoi","amountEarned","amountInvested","Grid","GridItem","Description","ApyCalculatorModal","oneThousandDollarsWorthOfPizza","pizzaEarnedPerThousand1D","pizzaEarnedPerThousand7D","pizzaEarnedPerThousand30D","pizzaEarnedPerThousand365D","ApyButton","onPresentApyModal","ml","RainbowLight","keyframes","StyledCardAccent","FCard","borderColor","ExpandingWrapper","FarmCard","showExpandableSection","setShowExpandableSection","toLocaleLowerCase","totalValue","earnLabel","farmAPY","CardActionsContainer","FarmTabButtons","Farms","inactiveFarms","farmsList","textAlign","responsive","mostRecentLotteryNumber","historyError","historyData","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","prevMillis","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","getLotteryDrawStep","ProgressWrapper","TopTextWrapper","BottomTextWrapper","StyledPrimaryText","LotteryProgress","timeUntilTicketSale","timeUntilLotteryDraw","msUntilLotteryDraw","getLotteryDrawTime","primaryStep","secondaryStep","showProgressBunny","secondary","Blurb","StyledHero","StyledContainer","LeftWrapper","RightWrapper","StyledLoading","Loading","RewardP","TicketsList","UserTicketsModal","myTicketNumbers","winNumbers","rewardMatch","n","listItems","emoji","WinningsWrapper","IconWrapper","StyledCardContentInner","PrizesWonContent","requestedClaim","onPresentMyTickets","winnings","TextWrapper","Image","md","NoPrizesContent","StyledCard","YourPrizesCard","isAWin","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","WarningModal","TicketCard","setAllowance","fetchAllowance","refreshInterval","useLotteryAllowance","useLotteryApprove","ticketsLength","PurchaseWarningModal","onPresentApprove","isSecondCard","CardHeader","TicketCountWrapper","TicketActions","pastDraw","RightAlignedText","RightAlignedHeading","PastDrawGridItem","PrizeGrid","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","Right","Left","PrizeCountWrapper","showFooter","TotalPrizesCard","setShowFooter","lotteryPrizeWithCommaSeparators","currentLotteryNumber","PastLotteryDataContext","fontWeight","RabbitRow","RabbitRowSmall","CardImageFirst","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","RabbitBox","RabbitBoxSmall","StyledCardHeader","CardWrapper","WinningNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","marginLeft","LayoutWrapper","StyledImage","HowItWorks","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","fetch","response","json","Error","SearchWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","PastRoundCardError","message","LotteryCardHeading","valueToDisplay","ExternalLinkWrap","contractLink","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","splice","Timestamp","timeValue","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match2Ticket","match3Ticket","poolSize","TicketRound","PizzaRoundIcon","PastLotteryActions","PastRoundCard","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","PastLotteryRoundViewer","isInitialized","setState","initialLotteryData","handleSubmit","Line","lazy","InnerWrapper","HistoryChart","getDataArray","kind","dataPoint","reverse","lineStyles","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","yAxisID","axesStyles","borderCapStyle","gridLines","ticks","fontFamily","fontColor","maxRotation","beginAtZero","autoSkipPadding","userCallback","legend","scales","yAxes","position","xAxes","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","BunnyImageWrapper","PastDrawsPage","Lottery","setActiveIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","IfoTabButtons","StyledIfoCardHeader","Name","IfoCardHeader","ifoId","StyledProgress","IfoCardProgress","progress","StyledIfoCardDescription","ToggleButton","IfoCardDescription","defaultIsOpen","StyledIfoCardDetails","Item","Display","IfoCardDetails","raisingAmount","totalAmount","rel","margin","Countdown","IfoCardTime","status","secondsUntilStart","secondsUntilEnd","countdownToUse","timeUntil","suffix","LabelButton","buttonLabel","BalanceInput","ContributeModal","setValue","IfoCardContribute","offeringTokenBalance","setOfferingTokenBalance","claimed","setUserInfo","contractRaisingToken","tokenContract","spenderAddress","dependency","useIfoAllowance","useIfoApprove","onPresentContributeModal","getOfferingAmount","userinfo","percentOfUserContribution","StyledIfoCard","getStatus","currentBlock","IfoCard","startBlockNum","endBlockNum","useIfoContract","Ribbon","variantColor","getRibbonComponent","totalBlocks","fetchProgress","ribbon","IfoCardWrapper","isSingle","LaunchIfoCallout","List","ul","activeIfo","ifosConfig","Ifo","IfoCards","pt","inactiveIfo","PastIfo","Ifos","CurrentIfo","NotFound","App","window","Global","component","configureStore","devTools","reducer","farmsReducer","poolsReducer","Providers","rpcUrl","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById","defaultTranslationState"],"mappings":"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","file":"static/js/main.3ad9ce37.chunk.js","sourcesContent":["import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  pizzaToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'PIZZA' = 'PIZZA',\n  'CHS' = 'CHS',\n  'USDT' = 'USDT',\n  'BUSD' = 'BUSD',\n  'HOTS' = 'HOTS',\n  'KP3RB' = 'KP3RB',\n  'PASTA' = 'PASTA',\n  'DAI' = 'DAI',\n  'ETH' = 'ETH',\n  'USDC' = 'USDC',\n  'CAKE' = 'CAKE',\n  'XCHS' = 'XCHS',\n  'cPIZZA' = 'cPIZZA',\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  tokenDecimal?: number\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  pastaId: number\n  image?: string\n  tokenName: string\n  earnToken: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","export default {\n  pizza: {\n    97: '',\n    56: '0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB',\n  },\n  pasta: {\n    97: '',\n    56: '0x4375eA687330A95D42383Ef18AD3ea8C4Db7224d',\n  },\n  masterChef: {\n    97: '',\n    56: '0xD3849bCefE2D032b7EA4e01aA18EA5D1797bdcc6',\n  },\n  pastaChef: {\n    97: '',\n    56: '0xB0953765fC1A2a25e8DFBe7c01245132c800d673',\n  },\n  wbnb: {\n    97: '',\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n  },\n  lottery: {\n    97: '',\n    56: '0x7e9189C9F263E788c8D5DF80c1Ca1AcbC8059C75',\n  },\n  lotteryNFT: {\n    97: '',\n    56: '0x5e71071c642912Fd12a82774a732670A1678Dc91',\n  },\n  mulltiCall: {\n    56: '0x52E54D127cA6474aB1C700335C4714f2515b4f3D',\n    97: '',\n  },\n  busd: {\n    56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    97: '',\n  },\n  chs: {\n    56: '0xaDD8A06fd58761A5047426e160B2B88AD3B9D464',\n    97: '',\n  },\n  hots: {\n    56: '0x793766efcA4CEF8c55EE950E759AD6FF73D49c09',\n    97: '',\n  },\n  kp3rb: {\n    56: '0x5EA29eEe799aA7cC379FdE5cf370BC24f2Ea7c81',\n    97: '',\n  },\n  usdt: {\n    56: '0x55d398326f99059fF775485246999027B3197955',\n    97: '',\n  },\n   usdc: {\n    56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n    97: '',\n  },\n   dai: {\n    56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n    97: '',\n  },\n  eth: {\n   56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n   97: '',\n },\n xchs: {\n  56: '0x9f51CAA2A1D1663fCa5bEFbFaf6C8acD8Ac9717a',\n  97: '',\n},\ncpizza: {\n 56: '0xda3684575afa20309938434F3d40799B12868057',\n 97: '',\n},\n  pizzaRabbits: {\n    56: '',\n    97: '',\n  },\n  ifo: {\n    56: '0xF90Ee56bCF8411f67FD0E44776b2f2A566Ef5bC2',\n    97: '',\n  },\n}\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    lpSymbol: 'PIZZA',\n    lpAddresses: {\n      97: '',\n      56: '0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB',\n    },\n    tokenSymbol: 'PASTA',\n    tokenAddresses: {\n      97: '',\n      56: '0x4375eA687330A95D42383Ef18AD3ea8C4Db7224d',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'PIZZA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8405Be915Af56589756A275d4894FA9f0Ff6CA0F',\n    },\n    tokenSymbol: 'PIZZA',\n    tokenAddresses: {\n      97: '',\n      56: '0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'PIZZA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8cC2f287195F3a1c7736cFE6348DA80e390622f6',\n    },\n    tokenSymbol: 'PIZZA',\n    tokenAddresses: {\n      97: '',\n      56: '0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    isCommunity: false,\n  },\n  {\n   pid: 11,\n   lpSymbol: 'PIZZA-USDT LP',\n   lpAddresses: {\n     97: '',\n     56: '0x31295b81D5c9388fb3AfDd22bCA517AAF52840f8',\n   },\n   tokenSymbol: 'PIZZA',\n   tokenAddresses: {\n     97: '',\n     56: '0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB',\n   },\n   quoteTokenSymbol: QuoteToken.USDT,\n   quoteTokenAdresses: contracts.usdt,\n   isCommunity: false,\n },\n {\n  pid: 13,\n  lpSymbol: 'PIZZA-USDC LP',\n  lpAddresses: {\n    97: '',\n    56: '0x36DCBA6A7b5769Acf74cEA7f58564EF1B44362C1',\n  },\n  tokenSymbol: 'PIZZA',\n  tokenAddresses: {\n    97: '',\n    56: '0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB',\n  },\n  quoteTokenSymbol: QuoteToken.USDC,\n  quoteTokenAdresses: contracts.usdc,\n  isCommunity: false,\n},\n{\n pid: 14,\n lpSymbol: 'PIZZA-DAI LP',\n lpAddresses: {\n   97: '',\n   56: '0xC928dd5D540971e322372EB13bb9003759862faE',\n },\n tokenSymbol: 'PIZZA',\n tokenAddresses: {\n   97: '',\n   56: '0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB',\n },\n quoteTokenSymbol: QuoteToken.DAI,\n quoteTokenAdresses: contracts.dai,\n isCommunity: false,\n},\n  {\n    pid: 3,\n    lpSymbol: 'PIZZA-CHS LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1E90d3C88A3E830983b70E6EF9799Ff1c0deCE62',\n    },\n    tokenSymbol: 'PIZZA',\n    tokenAddresses: {\n      97: '',\n      56: '0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB',\n    },\n    quoteTokenSymbol: QuoteToken.CHS,\n    quoteTokenAdresses: contracts.chs,\n  },\n  {\n    pid: 20,\n    lpSymbol: 'PIZZA-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x22Ba59adBd3FB5BA9E59CC8193878620bC63cCA4',\n    },\n    tokenSymbol: 'ETH',\n    tokenAddresses: {\n      97: '',\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n    },\n    quoteTokenSymbol: QuoteToken.PIZZA,\n    quoteTokenAdresses: contracts.pizza,\n    isCommunity: false,\n  },\n  {\n    pid: 18,\n    lpSymbol: 'CAKE-PIZZA LP',\n    lpAddresses: {\n      97: '',\n      56: '0x46f68394943aA90C071a866b8250aa0b370d0659',\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      97: '',\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n    },\n    quoteTokenSymbol: QuoteToken.PIZZA,\n    quoteTokenAdresses: contracts.pizza,\n    isCommunity: true,\n  },\n  {\n    pid: 19,\n    lpSymbol: 'cPIZZA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB91E194847576f84605B0d94Aa4E863558D86C84',\n    },\n    tokenSymbol: 'cPIZZA',\n    tokenAddresses: {\n      97: '',\n      56: '0xda3684575afa20309938434F3d40799B12868057',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n    isCommunity: false,\n  },\n  {\n    pid: 17,\n    lpSymbol: 'XCHS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1E90d3C88A3E830983b70E6EF9799Ff1c0deCE62',\n    },\n    tokenSymbol: 'XCHS',\n    tokenDecimal: 0,\n    tokenAddresses: {\n      97: '',\n      56: '0x9f51CAA2A1D1663fCa5bEFbFaf6C8acD8Ac9717a',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n   pid: 15,\n   lpSymbol: 'BETH-ETH LP',\n   lpAddresses: {\n     97: '',\n     56: '0x48e130085C13dF2069887Cb88b19C9Fbd8DE8877',\n   },\n   tokenSymbol: 'BETH',\n   tokenAddresses: {\n     97: '',\n     56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n   },\n   quoteTokenSymbol: QuoteToken.ETH,\n   quoteTokenAdresses: contracts.eth,\n   isCommunity: false,\n },\n {\n  pid: 16,\n  lpSymbol: 'BETH-PIZZA LP',\n  lpAddresses: {\n    97: '',\n    56: '0x8bd126bD0c09e74006f62aDc68F9c75048835aa0',\n  },\n  tokenSymbol: 'BETH',\n  tokenAddresses: {\n    97: '',\n    56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n  },\n  quoteTokenSymbol: QuoteToken.PIZZA,\n  quoteTokenAdresses: contracts.pizza,\n  isCommunity: false,\n},\n  {\n   pid: 5,\n   lpSymbol: 'BNB-BUSD LP',\n   lpAddresses: {\n     97: '',\n     56: '0xF455f6f7988B752F75488E2CCcC030346d0Cac72',\n   },\n   tokenSymbol: 'BNB',\n   tokenAddresses: {\n     97: '',\n     56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n   },\n   quoteTokenSymbol: QuoteToken.BUSD,\n   quoteTokenAdresses: contracts.busd,\n   isCommunity: false,\n },\n  {\n    pid: 7,\n    lpSymbol: 'ETH-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7d1a03b432c5f04A426F4Eaf41037fe8Dd695b89',\n    },\n    tokenSymbol: 'ETH',\n    tokenAddresses: {\n      97: '',\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n {\n   pid: 6,\n   lpSymbol: 'USDT-BNB LP',\n   lpAddresses: {\n     97: '',\n     56: '0xcfD63197d764cd70d07bB607e6367Ae0E869BaDD',\n   },\n   tokenSymbol: 'USDT',\n   tokenAddresses: {\n     97: '',\n     56: '0x55d398326f99059fF775485246999027B3197955',\n   },\n   quoteTokenSymbol: QuoteToken.BNB,\n   quoteTokenAdresses: contracts.wbnb,\n   isCommunity: false,\n },\n {\n  pid: 8,\n  lpSymbol: 'DAI-BNB LP',\n  lpAddresses: {\n    97: '',\n    56: '0x89D20Dcda1DC49F47BcDA00C3b84Fe30AC3d127b',\n  },\n  tokenSymbol: 'DAI',\n  tokenAddresses: {\n    97: '',\n    56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n  },\n  quoteTokenSymbol: QuoteToken.BNB,\n  quoteTokenAdresses: contracts.wbnb,\n  isCommunity: false,\n},\n{\n pid: 9,\n lpSymbol: 'USDC-BNB LP',\n lpAddresses: {\n   97: '',\n   56: '0x578e8CEc62666D2750D92EcC70bE0961FF3Ab269',\n },\n tokenSymbol: 'USDC',\n tokenAddresses: {\n   97: '',\n   56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n },\n quoteTokenSymbol: QuoteToken.BNB,\n quoteTokenAdresses: contracts.wbnb,\n isCommunity: false,\n},\n  {\n    pid: 4,\n    lpSymbol: 'CHS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x51A162dd678d75C269Ef6680193C019e0B4Bda7E',\n    },\n    tokenSymbol: 'CHS',\n    tokenAddresses: {\n      97: '',\n      56: '0xaDD8A06fd58761A5047426e160B2B88AD3B9D464',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 10,\n    lpSymbol: 'KP3RB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2113bA4000d8a0B201C3e916E63Fe0DCDfBe476a',\n    },\n    tokenSymbol: 'KP3RB',\n    tokenAddresses: {\n      97: '',\n      56: '0x5EA29eEe799aA7cC379FdE5cf370BC24f2Ea7c81',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 12,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x50c218b5c5f3c6062FA320d82Bb133e30AeE83d6',\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      97: '',\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n    isCommunity: true,\n  },\n]\n\nexport default farms\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getPizzaAddress = () => {\n  return addresses.pizza[chainId]\n}\nexport const getPastaAddress = () => {\n  return addresses.pasta[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals,\n      ] = await multicall(erc20, calls)\n\n      // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n      const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n      // Total value in staking in quote token value\n      const lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(18))\n        .times(new BigNumber(2))\n        .times(lpTokenRatio)\n\n      // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n      const tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n      const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(quoteTokenDecimals))\n        .times(lpTokenRatio)\n\n      const [info, totalAllocPoint] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        quoteTokenAmount: quoteTokenAmount.toJSON(),\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: quoteTokenAmount.div(tokenAmount).toJSON(),\n        poolWeight: poolWeight.toJSON(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingPizza',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    pastaId: 0,\n    tokenName: 'PIZZA',\n    earnToken: 'PIZZA',\n    stakingTokenName: QuoteToken.PIZZA,\n    stakingTokenAddress: '0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB',\n    contractAddress: {\n      97: '',\n      56: '0xD3849bCefE2D032b7EA4e01aA18EA5D1797bdcc6',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'http://pizzafinance.app/',\n    harvest: true,\n    tokenPerBlock: '0.005',\n    sortOrder: 1,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n\n{\n pastaId: 3,\n tokenName: 'KP3RB',\n earnToken: 'PIZZA',\n stakingTokenName: QuoteToken.KP3RB,\n stakingTokenAddress: '0x5EA29eEe799aA7cC379FdE5cf370BC24f2Ea7c81',    //\n contractAddress: {\n   97: '',\n   56: '0x84d20c47dbFd67DFb9449CAc8076c27889bEb365',\n },\n poolCategory: PoolCategory.CORE,\n projectLink: 'https://keep3rb.network/',\n harvest: false,\n tokenPerBlock: '0.050',\n sortOrder: 2,\n isFinished: true,\n tokenDecimals: 18,\n},\n{\n pastaId: 4,\n tokenName: 'CHS',\n earnToken: 'PIZZA',\n stakingTokenName: QuoteToken.CHS,\n stakingTokenAddress: '0xaDD8A06fd58761A5047426e160B2B88AD3B9D464',    //\n contractAddress: {\n   97: '',\n   56: '0x50256622Ed594239AFAf7D6aaC2A852aDfBD741c',\n },\n poolCategory: PoolCategory.CORE,\n projectLink: 'https://cheeseswap.app/',\n harvest: false,\n tokenPerBlock: '0.05',\n sortOrder: 3,\n isFinished: true,\n tokenDecimals: 18,\n},\n{\npastaId: 6,\ntokenName: 'XCHS',\nearnToken: 'CHS',\nstakingTokenName: QuoteToken.XCHS,\nstakingTokenAddress: '0x9f51caa2a1d1663fca5befbfaf6c8acd8ac9717a',    //\ncontractAddress: {\n  97: '',\n  56: '0xfE5Ea18dafb4aB5Da2C212441f2C54A3C9676dD9',\n},\npoolCategory: PoolCategory.CORE,\nprojectLink: 'https://cheeseswap.app/',\nharvest: false,\ntokenPerBlock: '0.0000051',\nsortOrder: 4,\nisFinished: true,\ntokenDecimals: 18,\n},\n{\n pastaId: 1,\n tokenName: 'CHS',\n earnToken: 'CHS',\n stakingTokenName: QuoteToken.PIZZA,\n stakingTokenAddress: '0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB',    //\n contractAddress: {\n   97: '',\n   56: '0xA647312aeD03a4D955D962E072e11032774D96Bf',\n },\n poolCategory: PoolCategory.CORE,\n projectLink: 'https://cheeseswap.app/',\n harvest: false,\n tokenPerBlock: '0.025',\n sortOrder: 5,\n isFinished: true,\n tokenDecimals: 18,\n},\n{\npastaId: 2,\ntokenName: 'KP3RB',\nearnToken: 'KP3RB',\nstakingTokenName: QuoteToken.PIZZA,\nstakingTokenAddress: '0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB',    //\ncontractAddress: {\n  97: '',\n  56: '0x65932e719B1108516B5d0A5cFdB6508A1268cAc2',\n},\npoolCategory: PoolCategory.CORE,\nprojectLink: 'https://keep3rb.network/',\nharvest: false,\ntokenPerBlock: '0.001',\nsortOrder: 6,\nisFinished: true,\ntokenDecimals: 18,\n},\n{\npastaId: 5,\ntokenName: 'HOTS',\nearnToken: 'HOTS',\nstakingTokenName: QuoteToken.PIZZA,\nstakingTokenAddress: '0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB',    //\ncontractAddress: {\n  97: '',\n  56: '0x7cAA197cdc8c6b878d5a44b3D0bcdFc7cc6AA66c',\n},\npoolCategory: PoolCategory.CORE,\nprojectLink: 'https://hotdog.cafe/',\nharvest: false,\ntokenPerBlock: '0.03',\nsortOrder: 4,\nisFinished: true,\ntokenDecimals: 18,\n},\n]\n\nexport default pools\n","import poolsConfig from 'config/constants/pools'\nimport pastaChefABI from 'config/abi/pastaChef.json'\nimport pizzaABI from 'config/abi/pizza.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getWbnbAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.pastaId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: poolConfig.contractAddress[CHAIN_ID],\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: poolConfig.contractAddress[CHAIN_ID],\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(pastaChefABI, callsStartBlock)\n  const ends = await multicall(pastaChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((pizzaPoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      pastaId: pizzaPoolConfig.pastaId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStatking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\n  const bnbPool = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: poolConfig.stakingTokenAddress,\n      name: 'balanceOf',\n      params: [poolConfig.contractAddress[CHAIN_ID]],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [poolConfig.contractAddress[CHAIN_ID]],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(pizzaABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      pastaId: p.pastaId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      pastaId: p.pastaId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport pastaChefABI from 'config/abi/pastaChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\n// Pool 0, Pizza / Pizza is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\nconst nonMasterPools = poolsConfig.filter((p) => p.pastaId !== 0)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, p.contractAddress[CHAIN_ID]],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.pastaId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.pastaId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.pastaId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(pastaChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.pastaId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Pizza / Pizza pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(pastaChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.pastaId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Pizza / Pizza pool\n  const pendingReward = await masterChefContract.methods.pendingPizza('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.pastaId === pool.pastaId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.pastaId === pool.pastaId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, pastaId } = action.payload\n      const index = state.data.findIndex((p) => p.pastaId === pastaId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.pastaId === pool.pastaId)\n    const totalStaking = totalStakings.find((entry) => entry.pastaId === pool.pastaId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    pastaId: pool.pastaId,\n    allowance: allowances[pool.pastaId],\n    stakingTokenBalance: stakingTokenBalances[pool.pastaId],\n    stakedBalance: stakedBalances[pool.pastaId],\n    pendingReward: pendingRewards[pool.pastaId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (pastaId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ pastaId, field: 'allowance', value: allowances[pastaId] }))\n}\n\nexport const updateUserBalance = (pastaId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ pastaId, field: 'stakingTokenBalance', value: tokenBalances[pastaId] }))\n}\n\nexport const updateUserStakedBalance = (pastaId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ pastaId, field: 'stakedBalance', value: stakedBalances[pastaId] }))\n}\n\nexport const updateUserPendingReward = (pastaId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ pastaId, field: 'pendingReward', value: pendingRewards[pastaId] }))\n}\n\nexport default PoolsSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\nimport { State, Farm, Pool } from './types'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (pastaId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.pastaId === pastaId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 6 // USDT-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(1).div(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePricePizzaBusd = (): BigNumber => {\n  const pid = 1 // PIZZA-BNB LP\n  const bnbPriceUSD = usePriceBnbBusd()\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n}\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PizzaTheme } from '@pizzafinance/ui-sdk/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PizzaTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Heebo', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  AR,\n  CA,\n  ZHCN,\n  ZHTW,\n  CS,\n  DA,\n  DE,\n  NL,\n  FIL,\n  FI,\n  FR,\n  EL,\n  HI,\n  HU,\n  ID,\n  IT,\n  JA,\n  KO,\n  PTBR,\n  RO,\n  RU,\n  SR,\n  ESES,\n  SVSE,\n  TA,\n  TR,\n  UK,\n  VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pizzaSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECT_ID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch(() => {\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pizzafinance/ui-sdk'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@pizzafinance/ui-sdk'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Exchange',\n        href: 'https://cheeseswap.app/#/swap?inputCurrency=0x2cc26dd730f548dc4ac291ae7d84a0c96980d2cb&outputCurrency=0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n      },\n      {\n        label: 'Liquidity',\n        href: 'https://cheeseswap.app/#/add/0x2cc26dd730f548dc4ac291ae7d84a0c96980d2cb/0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n      },\n    ],\n  },\n  {\n    label: 'Farms',\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: 'Pools',\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: 'Lottery',\n    icon: 'TicketIcon',\n    href: '/lottery',\n  },\n  {\n    label: 'IDO',\n    icon: 'IfoIcon',\n    href: '/ido',\n  },\n  {\n    label: 'Info',\n    icon: 'InfoIcon',\n    items: [\n      {\n        label: 'Overview',\n        href: 'https://info.cheeseswap.app',\n      },\n      {\n        label: 'Tokens',\n        href: 'https://info.cheeseswap.app/#/token/0x2cc26dd730f548dc4ac291ae7d84a0c96980d2cb',\n      },\n      {\n        label: 'Pairs',\n        href: 'https://info.cheeseswap.app/#/pair/0x8405be915af56589756a275d4894fa9f0ff6ca0f',\n      },\n      {\n        label: 'Accounts',\n        href: 'https://info.cheeseswap.app/#/accounts',\n      },\n    ],\n  },\n  {\n    label: 'More',\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: 'Github',\n        href: 'https://github.com/pizzafinancebsc',\n      },\n      {\n        label: 'Docs',\n        href: 'https://docs.cheesemaker.farm/',\n      },\n    ],\n  },\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { Menu as UikitMenu } from '@pizzafinance/ui-sdk'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePricePizzaBusd } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const pizzaPriceUsd = usePricePizzaBusd()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      pizzaPriceUsd={pizzaPriceUsd.toNumber()}\n      links={config}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pizzafinance/ui-sdk'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const PIZZA_PER_BLOCK = new BigNumber(0.25)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const PIZZA_POOL_PID = 1\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pizzafinance/ui-sdk'\n\nconst CoreTag = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag }\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 0px 10px rgb(75, 77, 80, 0.1);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 0px 10px rgb(75, 77, 80, 0.1)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Image, Button } from '@pizzafinance/ui-sdk'\nimport { CommunityTag } from 'components/Tags'\nimport useI18n from 'hooks/useI18n'\nimport Card from './Card'\nimport CardTitle from './CardTitle'\n\nconst Balance = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 40px;\n  font-weight: 600;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  margin-bottom: 16px;\n`\n\nconst DetailPlaceholder = styled.div`\n  display: flex;\n  font-size: 14px;\n`\nconst Value = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 14px;\n`\n\nconst Footer = styled.div`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  padding: 24px;\n`\nconst Coming: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <div style={{ padding: '24px' }}>\n        <CardTitle>\n          {TranslateString(414, 'Your Project?')}{' '}\n          <span role=\"img\" aria-label=\"eyes\">\n            👀\n          </span>\n        </CardTitle>\n        <Image src=\"/images/bunny-question.svg\" width={64} height={64} alt=\"Your project here\" />\n        <Balance>...</Balance>\n        <Label>{TranslateString(416, 'Create a Staking pool for your token')}</Label>\n        <Button\n          variant=\"secondary\"\n          as=\"a\"\n          href=\"https://docs.google.com/forms/d/e/1FAIpQLSfQxi51mWTkB5bdH8_op_xFVpZMBMTM5HqswZRI2xLXtT5FsA/viewform\"\n          external\n          fullWidth\n          mb=\"16px\"\n        >\n          {TranslateString(418, 'Apply Now')}\n        </Button>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>{TranslateString(352, 'APY')}:</div>\n          <Value>..</Value>\n        </DetailPlaceholder>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label=\"pasta\">\n              🍕{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Value> ... PIZZA</Value>\n        </DetailPlaceholder>\n      </div>\n      <Footer>\n        <CommunityTag />\n      </Footer>\n    </Card>\n  )\n}\n\nexport default Coming\n","import React from 'react'\nimport { Button, useWalletModal } from '@pizzafinance/ui-sdk'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || httpProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n","import { Ifo } from './types'\n\nconst ifos: Ifo[] = [\n  {\n    id: 'MANGO',\n    address: '0xF90Ee56bCF8411f67FD0E44776b2f2A566Ef5bC2',\n    isActive: true,\n    name: 'MANGO',\n    subTitle: 'Mango Farm - Inflation controlled VERY LOW emission rate farming',\n    description:\n      'Mango Farm - Very new types of yield-farming project on BSC with very low initial supply, only 9500 MANGO exist out of 45000 MANGO. Rest of all were burnt Tx:: https://tinyurl.com/mangoburnt ',\n    launchDate: 'March. 12',\n    launchTime: '01:14:38 UTC',\n    saleAmount: '8,000 MANGO',\n    raiseAmount: '$11,200,000',\n    pizzaToBurn: '$1,000,000',\n    projectSiteUrl: 'https://mangofarm.finance/',\n    currency: 'PIZZA-BNB LP',\n    currencyAddress: '0x8405be915af56589756a275d4894fa9f0ff6ca0f',\n    tokenDecimals: 18,\n    releaseBlockNumber: 5639441,\n  },\n]\n\nexport default ifos\n","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport { getMasterChefAddress, getPizzaAddress, getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport pizzaRabbits from 'config/abi/pizzaRabbits.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport pastaChef from 'config/abi/pastaChef.json'\nimport pastaChefBnb from 'config/abi/pastaChefBnb.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const usePizza = () => {\n  return useERC20(getPizzaAddress())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const rabbitMintingFarmAbi = (rabbitmintingfarm as unknown) as AbiItem\n  return useContract(rabbitMintingFarmAbi, address)\n}\n\nexport const usePizzaRabbits = (address: string) => {\n  const pizzaRabbitsAbi = (pizzaRabbits as unknown) as AbiItem\n  return useContract(pizzaRabbitsAbi, address)\n}\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const usePastaChef = (id) => {\n  const config = poolsConfig.find((pool) => pool.pastaId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? pastaChefBnb : pastaChef\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n}\n\nexport default useContract\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .enterStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const pastaStake = async (pastaChefContract, amount, account) => {\n  return pastaChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const pastaStakeBnb = async (pastaChefContract, amount, account) => {\n  return pastaChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const pastaUnstake = async (pastaChefContract, amount, account) => {\n  if (pastaChefContract.options.address === '0xB0953765fC1A2a25e8DFBe7c01245132c800d673') {\n    return pastaChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (pastaChefContract.options.address === '0xB0953765fC1A2a25e8DFBe7c01245132c800d673') {\n    return pastaChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return pastaChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const pastaEmegencyUnstake = async (pastaChefContract, amount, account) => {\n  return pastaChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking('0')\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const pastahHarvest = async (pastaChefContract, account) => {\n  return pastaChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const pastahHarvestBnb = async (pastaChefContract, account) => {\n  return pastaChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, pastaStake, pastaStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, usePastaChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const usePastaStake = (pastaId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const pastaChefContract = usePastaChef(pastaId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (pastaId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await pastaStakeBnb(pastaChefContract, amount, account)\n      } else {\n        await pastaStake(pastaChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(pastaId, account))\n      dispatch(updateUserBalance(pastaId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, pastaChefContract, pastaId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, pastaUnstake, pastaEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, usePastaChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst PASTAIDS = [ 0, 3, 4 ]\n\nexport const usePastaUnstake = (pastaId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const pastaChefContract = usePastaChef(pastaId)\n  const isOldPasta = PASTAIDS.includes(pastaId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      if (pastaId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldPasta) {\n        const txHash = await pastaEmegencyUnstake(pastaChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await pastaUnstake(pastaChefContract, amount, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(pastaId, account))\n      dispatch(updateUserBalance(pastaId, account))\n      dispatch(updateUserPendingReward(pastaId, account))\n    },\n    [account, dispatch, isOldPasta, masterChefContract, pastaChefContract, pastaId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@pizzafinance/ui-sdk'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pizzafinance/ui-sdk'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pizzafinance/ui-sdk'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pizzafinance/ui-sdk'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@pizzafinance/ui-sdk'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  earnToken?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, earnToken = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${earnToken} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-pizza\"\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldPastaTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink href=\"/\" target=\"_blank\">\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldPastaTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#2ab770` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#2ab770` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  tokenName: string\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  tokenName,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"pasta\">\n                  {' '}\n                </span>\n                {TranslateString(408, 'Total Stake of')} {tokenName}:\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'End Block of Stake')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from '@pizzafinance/ui-sdk'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { usePastaApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { usePastaStake } from 'hooks/useStake'\nimport { usePastaUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePastaHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldPastaTitle from './OldPastaTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    pastaId,\n    image,\n    tokenName,\n    earnToken,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = usePastaApprove(stakingTokenContract, pastaId)\n  const { onStake } = usePastaStake(pastaId, isBnbPool)\n  const { onUnstake } = usePastaUnstake(pastaId)\n  const { onReward } = usePastaHarvest(pastaId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const isOldPasta = stakingTokenName === QuoteToken.PASTA\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && pastaId !== 0}>\n      {isFinished && pastaId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && pastaId !== 0}>\n          {isOldPasta && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\n          </div>\n          {account && harvest && !isOldPasta && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldPasta ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n            {pastaId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldPastaTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && pastaId !== 0} text={TranslateString(330, `${earnToken} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldPasta ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldPasta\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldPasta && (\n                  <IconButton disabled={isFinished && pastaId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{TranslateString(352, 'APY')}:</div>\n          {isFinished || isOldPasta || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n               {' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        tokenName={tokenName}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, usePizza, usePastaChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const usePastaApprove = (lpContract: Contract, pastaId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const pastaChefContract = usePastaChef(pastaId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, pastaChefContract, account)\n      dispatch(updateUserAllowance(pastaId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, pastaChefContract, pastaId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const pizzaContract = usePizza()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(pizzaContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, pizzaContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { pastahHarvest, pastahHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, usePastaChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const usePastaHarvest = (pastaId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const pastaChefContract = usePastaChef(pastaId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (pastaId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await pastahHarvestBnb(pastaChefContract, account)\n    } else {\n      await pastahHarvest(pastaChefContract, account)\n    }\n    dispatch(updateUserPendingReward(pastaId, account))\n    dispatch(updateUserBalance(pastaId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, pastaChefContract, pastaId])\n\n  return { onReward: handleHarvest }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1.7px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from '@pizzafinance/ui-sdk'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useFarms, usePriceBnbBusd, usePools } from 'state/hooks'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === 'BNB') {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n\n    // /!\\ Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.pastaId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            {TranslateString(282, 'SMART Pool')}\n          </Heading>\n          <Heading as=\"h4\" size=\"l\" mb=\"14px\">\n            {TranslateString(282, 'PIZZA Smart Staking Pool')}\n          </Heading>\n          <Heading as=\"h4\" size=\"l\" mb=\"14px\">\n            {TranslateString(282, 'CAUTION!!! PLEASE DO NOT SELL / MOVE YOUR EARNED #PASTA TOKEN. YOUR TRANSACTION MAY REVERT THEN.')}\n          </Heading>\n          <ul>\n            <li>{TranslateString(580, 'Stake PIZZA or supported tokens to earn')}</li>\n            <li>{TranslateString(580, 'Any listed NEW BEP20 tokens.')}</li>\n            <li>{TranslateString(404, 'You can unstake at any time..')}</li>\n            <li>{TranslateString(406, 'Rewards are calculated per block.')}</li>\n            <li>{TranslateString(406, '______________________________________________________________')}</li>\n            <li>{TranslateString(406, 'CAUTION!: STAKING POOLS CALCULATED \"APY\" DATA IS REAL TIME AND AUTOMATICALLY COLLECTED FROM BLOCKCHAIN. DATA MAY NOT ACCURATE.')}</li>\n          </ul>\n        </div>\n        <img src=\"/images/pasta-space.svg\" alt=\"PASTA POOL icon\" width={250} height={191} />\n      </Hero>\n      <PoolTabButtons />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.pastaId} pool={pool} />\n            ))}\n            <Coming />\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.pastaId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n","import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport pizzaABI from 'config/abi/pizza.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getPizzaAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const pizzaContract = getContract(pizzaABI, getPizzaAddress())\n      const supply = await pizzaContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, '0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@pizzafinance/ui-sdk'\n\ninterface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({ value, decimals, fontSize = '40px' }) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold fontSize={fontSize}>\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import React from 'react'\nimport { Card, CardBody, Heading, Text } from '@pizzafinance/ui-sdk'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getPizzaAddress } from 'utils/addressHelpers'\nimport CardValue from './CardValue'\n\nconst StyledPizzaStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst PizzaStats = () => {\n  const TranslateString = useI18n()\n  const totalSupply = useTotalSupply()\n  const burnedBalance = useBurnedBalance(getPizzaAddress())\n  const pizzaSupply = totalSupply ? getBalanceNumber(totalSupply) - getBalanceNumber(burnedBalance) : 0\n\n  return (\n    <StyledPizzaStats>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(534, 'Pizza Stats')}\n        </Heading>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(536, 'Total PIZZA Supply')}</Text>\n          {pizzaSupply && <CardValue fontSize=\"14px\" value={pizzaSupply} />}\n        </Row>\n          <Row>\n          <Text fontSize=\"14px\">{TranslateString(538, 'Total PIZZA Burned')}</Text>\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(burnedBalance)} />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(540, 'New PIZZA/block')}</Text>\n          <CardValue fontSize=\"14px\" decimals={4} value={0.25} />\n        </Row>\n      </CardBody>\n    </StyledPizzaStats>\n  )\n}\n\nexport default PizzaStats\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport { FarmConfig } from 'config/constants/types'\nimport useRefresh from './useRefresh'\n\nexport interface FarmWithBalance extends FarmConfig {\n  balance: BigNumber\n}\n\nconst useFarmsWithBalance = () => {\n  const [farmsWithBalances, setFarmsWithBalances] = useState<FarmWithBalance[]>([])\n  const { account } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingPizza',\n        params: [farm.pid, account],\n      }))\n\n      const rawResults = await multicall(masterChefABI, calls)\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\n\n      setFarmsWithBalances(results)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh])\n\n  return farmsWithBalances\n}\n\nexport default useFarmsWithBalance\n","import { useEffect, useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from './useRefresh'\n\nconst useAllEarnings = () => {\n  const [balances, setBalance] = useState([])\n  const { account }: { account: string } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchAllBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingPizza',\n        params: [farm.pid, account],\n      }))\n\n      const res = await multicall(masterChefABI, calls)\n\n      setBalance(res)\n    }\n\n    if (account) {\n      fetchAllBalances()\n    }\n  }, [account, fastRefresh])\n\n  return balances\n}\n\nexport default useAllEarnings\n","import React from 'react'\nimport { Text } from '@pizzafinance/ui-sdk'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport useAllEarnings from 'hooks/useAllEarnings'\nimport CardValue from './CardValue'\n\nconst PizzaHarvestBalance = () => {\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const allEarnings = useAllEarnings()\n  const earningsSum = allEarnings.reduce((accum, earning) => {\n    return accum + new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber()\n  }, 0)\n\n  if (!account) {\n    return (\n      <Text color=\"textDisabled\" style={{ lineHeight: '60px' }}>\n        {TranslateString(298, 'Locked')}\n      </Text>\n    )\n  }\n\n  return <CardValue value={earningsSum} />\n}\n\nexport default PizzaHarvestBalance\n","import React from 'react'\nimport { Text } from '@pizzafinance/ui-sdk'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getPizzaAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport CardValue from './CardValue'\n\nconst PizzaWalletBalance = () => {\n  const TranslateString = useI18n()\n  const pizzaBalance = useTokenBalance(getPizzaAddress())\n  const { account } = useWallet()\n\n  if (!account) {\n    return (\n      <Text color=\"textDisabled\" style={{ lineHeight: '36px' }}>\n        {TranslateString(298, 'Locked')}\n      </Text>\n    )\n  }\n\n  return <CardValue value={getBalanceNumber(pizzaBalance)} fontSize=\"24px\" />\n}\n\nexport default PizzaWalletBalance\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button } from '@pizzafinance/ui-sdk'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\nimport { useAllHarvest } from 'hooks/useHarvest'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport UnlockButton from 'components/UnlockButton'\nimport PizzaHarvestBalance from './PizzaHarvestBalance'\nimport PizzaWalletBalance from './PizzaWalletBalance'\n\nconst StyledFarmStakingCard = styled(Card)`\n  background-image: url('/images/pizza-bg.svg');\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 376px;\n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\n\nconst FarmedStakingCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const farmsWithBalance = useFarmsWithBalance()\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\n\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    try {\n      await onReward()\n    } catch (error) {\n      // TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false)\n    }\n  }, [onReward])\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(542, 'Farms & Staking')}\n        </Heading>\n        <CardImage src=\"/images/pizza.svg\" alt=\"pizza logo\" width={64} height={64} />\n        <Block>\n          <PizzaHarvestBalance />\n          <Label>{TranslateString(544, 'PIZZA to Harvest')}</Label>\n        </Block>\n        <Block>\n          <PizzaWalletBalance />\n          <Label>{TranslateString(546, 'PIZZA in Wallet')}</Label>\n        </Block>\n        <Actions>\n          {account ? (\n            <Button\n              id=\"harvest-all\"\n              disabled={balancesWithValue.length <= 0 || pendingTx}\n              onClick={harvestAllFarms}\n              fullWidth\n            >\n              {pendingTx\n                ? TranslateString(548, 'Collecting PIZZA')\n                : TranslateString(999, `Harvest all (${balancesWithValue.length})`)}\n            </Button>\n          ) : (\n            <UnlockButton fullWidth />\n          )}\n        </Actions>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default FarmedStakingCard\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { getMulticallAddress } from './addressHelpers'\n\nexport const multiCall = async (abi, calls) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract(MultiCallAbi, getMulticallAddress())\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract.methods\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIdex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\n  const length = await getTicketsAmount(ticketsContract, account)\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (ticketIssue.toString() === issueIdex) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n\n  await getLotteryStatus(lotteryContract)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.methods.balanceOf(account).call()\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.methods.issueIndex().call()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finanltokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finanltokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finanltokenIds.length > 200) {\n    finanltokenIds = finanltokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.methods\n      .multiClaim(finanltokenIds)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIdex = await lotteryContract.methods.issueIndex().call()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length }).map((a, i) => [\n      ticketsContract.options.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n\n    const finalTokenids = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIdex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenids.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenids.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BigNumber(0))\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return BigNumber(0)\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\n  return lotteryContract.methods.getTotalRewards(issueIdex).call()\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.methods.maxNumber().call()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.methods.drawed().call()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIdex = await lotteryContract.methods.issueIndex().call()\n  const drawed = await lotteryContract.methods.drawed().call()\n  if (!drawed) {\n    issueIdex -= 1\n  }\n  try {\n    const amount = await lotteryContract.methods.historyAmount(issueIdex, 5 - matchNumber).call()\n    return amount / 1e18 / 10\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\n  const numbers = []\n  const drawed = await lotteryContract.methods.drawed().call()\n\n  if (!drawed && parseInt(issueIdex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIdex - 1, i).call()).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\n    }\n  }\n  return numbers\n}\n","import { useEffect, useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useLottery } from 'hooks/useContract'\nimport { getLotteryStatus } from 'utils/lotteryUtils'\n\n/**\n * Returns whether or not the current lottery has drawn numbers\n *\n * @return {Boolean}\n */\nconst useGetLotteryHasDrawn = () => {\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\n  const { account } = useWallet()\n  const lotteryContract = useLottery()\n\n  useEffect(() => {\n    if (account && lotteryContract) {\n      const fetchLotteryStatus = async () => {\n        const state = await getLotteryStatus(lotteryContract)\n        setLotteryHasDrawn(state)\n      }\n\n      fetchLotteryStatus()\n    }\n  }, [account, lotteryContract])\n\n  return lotteryHasDrawn\n}\n\nexport default useGetLotteryHasDrawn\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\n\nexport const useMultiClaimLottery = () => {\n  const { account } = useWallet()\n  const lotteryContract = useLottery()\n  const lotteryTicketContract = useLotteryTicket()\n\n  const handleClaim = useCallback(async () => {\n    try {\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, lotteryContract, lotteryTicketContract])\n\n  return { onMultiClaim: handleClaim }\n}\n\nexport const useMultiBuyLottery = () => {\n  const { account } = useWallet()\n  const lotteryContract = useLottery()\n\n  const handleBuy = useCallback(\n    async (amount: string, numbers: Array<any>) => {\n      try {\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [account, lotteryContract],\n  )\n\n  return { onMultiBuy: handleBuy }\n}\n\nexport const useMaxNumber = () => {\n  const [max, setMax] = useState(5)\n  const lotteryContract = useLottery()\n\n  const fetchMax = useCallback(async () => {\n    const maxNumber = await getMax(lotteryContract)\n    setMax(maxNumber)\n  }, [lotteryContract])\n\n  useEffect(() => {\n    if (lotteryContract) {\n      fetchMax()\n    }\n  }, [lotteryContract, fetchMax])\n\n  return max\n}\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWallet()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(new BigNumber(0))\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n      setRewards(new BigNumber(res))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWallet()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\n\n  return { claimLoading, claimAmount }\n}\n\nexport const useWinningNumbers = () => {\n  const [winngNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winngNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\n      setMatchingNumbers(matchedNumbaers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n\n  return matchingNumbers\n}\n\nexport default useTickets\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pizzafinance/ui-sdk'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  availableSymbol: string\n  onSelectMax?: () => void\n}\n\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledTokenInput>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TicketInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Modal } from '@pizzafinance/ui-sdk'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport TicketInput from 'components/TicketInput'\nimport ModalActions from 'components/ModalActions'\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\nimport useI18n from 'hooks/useI18n'\n\ninterface BuyTicketModalProps {\n  max: BigNumber\n  onConfirm?: (amount: string, numbers: Array<number>) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\n  const [val, setVal] = useState('1')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [, setRequestedBuy] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const maxTickets = useMemo(() => {\n     return parseInt(getFullDisplayBalance(max.div(new BigNumber(1))))\n   }, [max])\n\n   const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\n\n   const { onMultiBuy } = useMultiBuyLottery()\n   const maxNumber = useMaxNumber()\n   const handleBuy = useCallback(async () => {\n     try {\n       setRequestedBuy(true)\n       const length = parseInt(val)\n       // @ts-ignore\n       // eslint-disable-next-line prefer-spread\n       const numbers = Array.apply(null, { length }).map(() => [\n         Math.floor(Math.random() * maxNumber) + 1,\n         Math.floor(Math.random() * maxNumber) + 1,\n         Math.floor(Math.random() * maxNumber) + 1,\n         Math.floor(Math.random() * maxNumber) + 1,\n       ])\n       const txHash = await onMultiBuy('1', numbers)\n       // user rejected tx or didn't go thru\n       if (txHash) {\n         setRequestedBuy(false)\n       }\n     } catch (e) {\n       console.error(e)\n     }\n   }, [onMultiBuy, setRequestedBuy, maxNumber, val])\n\n  const handleSelectMax = useCallback(() => {\n    if (Number(maxTickets) > 100) {\n      setVal('100')\n    } else {\n      setVal(maxTickets.toString())\n    }\n  }, [maxTickets])\n\n  const pizzaCosts = (amount: string): number => {\n    return +amount * 1\n  }\n  return (\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\n      <TicketInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol=\"PSLT Ticket\"\n        availableSymbol=\"PIZZA\"\n      />\n      <div>\n        <Tips>{TranslateString(456, 'Your amount must be a multiple of 1 PIZZA')}</Tips>\n        <Tips>{TranslateString(458, '1 Ticket = 1 PIZZA')}</Tips>\n      </div>\n      <div>\n        <Announce>\n          {TranslateString(\n            478,\n            'Ticket purchases are final. Your PIZZA cannot be returned to you after buying tickets.',\n          )}\n        </Announce>\n        <Final>{TranslateString(460, `You will spend: ${pizzaCosts(val)} PIZZA`)}</Final>\n      </div>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"lottery-buy-complete\"\n          fullWidth\n          disabled={pendingTx || parseInt(val) > Number(maxTickets) || parseInt(val) > 50 || parseInt(val) < 1}\n          onClick={async () => {\n            setPendingTx(true)\n            await handleBuy()\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default BuyTicketModal\n\nconst Tips = styled.div`\n  margin-left: 0.4em;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst Final = styled.div`\n  margin-top: 1em;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\nconst Announce = styled.div`\n  margin-top: 1em;\n  margin-left: 0.4em;\n  color: #ed4b9e;\n`\n","import React from 'react'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport CardValue from './CardValue'\n\nconst PizzaWinnings = () => {\n  const { claimAmount } = useTotalClaim()\n  return <CardValue value={getBalanceNumber(claimAmount)} />\n}\n\nexport default PizzaWinnings\n","import React from 'react'\nimport { Text } from '@pizzafinance/ui-sdk'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalRewards } from 'hooks/useTickets'\n\nconst LotteryJackpot = () => {\n  const lotteryPrizeAmount = useTotalRewards()\n\n  return (\n    <Text bold fontSize=\"24px\">\n      {getBalanceNumber(lotteryPrizeAmount).toLocaleString(undefined, {\n        maximumFractionDigits: 2,\n      })}\n    </Text>\n  )\n}\n\nexport default LotteryJackpot\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button, useModal } from '@pizzafinance/ui-sdk'\nimport { getPizzaAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport { useTotalClaim } from 'hooks/useTickets'\n\nimport BuyModal from 'views/Lottery/components/TicketCard/BuyTicketModal'\nimport PizzaWinnings from './PizzaWinnings'\nimport LotteryJackpot from './LotteryJackpot'\n\nconst StyledLotteryCard = styled(Card)`\n  background-image: url('/images/ticket-bg.svg');\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 376px;\n`\nconst Block = styled.div`\n margin-bottom: 16px;\n`\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\nconst Label = styled.div`\ncolor: ${({ theme }) => theme.colors.textSubtle};\n font-size: 14px;\n`\nconst Actions = styled.div`\n display: flex;\n margin-top: 24px;\n button {\n   flex: 1 0 50%;\n }\n `\n\nconst FarmedStakingCard = () => {\nconst lotteryHasDrawn = useGetLotteryHasDrawn()\n  const [requesteClaim, setRequestedClaim] = useState(false)\n  const TranslateString = useI18n()\n  const { claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n\n  const pizzaBalance = useTokenBalance(getPizzaAddress())\n\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim])\n\n  const [onPresentBuy] = useModal(<BuyModal max={pizzaBalance} tokenName=\"PIZZA\" />)\n\n  return (\n    <StyledLotteryCard>\n      <CardBody>\n      <Heading size=\"xl\" mb=\"24px\">\n        {TranslateString(550, 'PIZZA Lottery Desk')}\n      </Heading>\n      <CardImage src=\"/images/ticket.svg\" alt=\"Pizza ticket logo\" width={64} height={64} />\n      <Block>\n        <PizzaWinnings />\n        <Label>{TranslateString(552, 'PIZZA to Collect')}</Label>\n      </Block>\n      <Block>\n        <LotteryJackpot />\n        <Label>{TranslateString(554, 'Total jackpot this round')}</Label>\n      </Block>\n      <Actions>\n        <Button\n          id=\"dashboard-collect-winnings\"\n          disabled={getBalanceNumber(claimAmount) === 0 || requesteClaim}\n          onClick={handleClaim}\n          style={{ marginRight: '8px' }}\n        >\n          {TranslateString(556, 'Collect Winnings')}\n        </Button>\n        <Button id=\"dashboard-buy-tickets\" variant=\"secondary\" onClick={onPresentBuy} disabled={lotteryHasDrawn}>\n          {TranslateString(558, 'Buy Tickets')}\n        </Button>\n      </Actions>\n      </CardBody>\n    </StyledLotteryCard>\n  )\n}\n\nexport default FarmedStakingCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Heading, Link } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\n// import { useGetStats } from 'hooks/api'\n\nconst StyledPartnerCard = styled(Card)`\n  align-items: center;\n  display: flex;\n  flex: 1;\n`\nconst CardImage = styled.img`\n  margin: 2px;\n`\nconst StyledLink = styled(Link)`\n  align-self: center;\n  margin-top: 16px;\n`\n\nconst PartnerCard = () => {\n  const TranslateString = useI18n()\n//  const data = useGetStats()\n//  const tvl = data ? data.total_value_locked_all.toLocaleString('en-US', { maximumFractionDigits: 0 }) : null\n\n  return (\n    <StyledPartnerCard>\n      <CardBody>\n      <Heading size=\"xl\" mb=\"24px\">\n        {TranslateString(550, ' Partnership')}\n      </Heading>\n        <StyledLink href=\"https://cheeseswap.app/\">\n          <CardImage src=\"/images/cheeseswap.svg\" alt=\"CheeseSwap logo\" width={180} />\n        </StyledLink>\n        <StyledLink href=\"https://keep3rb.network/\">\n          <CardImage src=\"/images/keep3rb.svg\" alt=\"Keep3rb logo\" width={180} />\n        </StyledLink>\n      </CardBody>\n    </StyledPartnerCard>\n  )\n}\n\nexport default PartnerCard\n","import React, { useCallback, useRef } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon, Skeleton } from '@pizzafinance/ui-sdk'\nimport { NavLink } from 'react-router-dom'\nimport useI18n from 'hooks/useI18n'\nimport BigNumber from 'bignumber.js'\nimport { QuoteToken } from 'config/constants/types'\nimport { useFarms, usePriceBnbBusd } from 'state/hooks'\nimport { BLOCKS_PER_YEAR, PIZZA_PER_BLOCK, PIZZA_POOL_PID } from 'config'\n\nconst StyledFarmStakingCard = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ size: 'xl' })`\n  line-height: 44px;\n`\nconst EarnAPYCard = () => {\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const bnbPrice = usePriceBnbBusd()\n\n  const maxAPY = useRef(Number.MIN_VALUE)\n\n  const getHighestAPY = () => {\n    const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X')\n\n    calculateAPY(activeFarms)\n\n    return (maxAPY.current * 100).toLocaleString('en-US').slice(0, -1)\n  }\n\n  const calculateAPY = useCallback(\n    (farmsToDisplay) => {\n      const pizzaPriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === PIZZA_POOL_PID)?.tokenPriceVsQuote || 0)\n\n      farmsToDisplay.map((farm) => {\n        if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n          return farm\n        }\n        const pizzaRewardPerBlock = PIZZA_PER_BLOCK.times(farm.poolWeight)\n        const pizzaRewardPerYear = pizzaRewardPerBlock.times(BLOCKS_PER_YEAR)\n\n        let apy = pizzaPriceVsBNB.times(pizzaRewardPerYear).div(farm.lpTotalInQuoteToken)\n\n        if (farm.quoteTokenSymbol === QuoteToken.BUSD) {\n          apy = pizzaPriceVsBNB.times(pizzaRewardPerYear).div(farm.lpTotalInQuoteToken).times(bnbPrice)\n        } else if (farm.quoteTokenSymbol === QuoteToken.PIZZA) {\n          apy = pizzaRewardPerYear.div(farm.lpTotalInQuoteToken)\n        } else if (farm.dual) {\n          const pizzaApy =\n            farm && pizzaPriceVsBNB.times(pizzaRewardPerBlock).times(BLOCKS_PER_YEAR).div(farm.lpTotalInQuoteToken)\n          const dualApy =\n            farm.tokenPriceVsQuote &&\n            new BigNumber(farm.tokenPriceVsQuote)\n              .times(farm.dual.rewardPerBlock)\n              .times(BLOCKS_PER_YEAR)\n              .div(farm.lpTotalInQuoteToken)\n\n          apy = pizzaApy && dualApy && pizzaApy.plus(dualApy)\n        }\n\n        if (maxAPY.current < apy.toNumber()) maxAPY.current = apy.toNumber()\n\n        return apy\n      })\n    },\n    [bnbPrice, farmsLP],\n  )\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading color=\"contrast\" size=\"lg\">\n          Earn up to\n        </Heading>\n        <CardMidContent color=\"#EF4E7B\">\n          {getHighestAPY() ? (\n            `${getHighestAPY()}% ${TranslateString(736, 'APY')}`\n          ) : (\n            <Skeleton animation=\"pulse\" variant=\"rect\" height=\"44px\" />\n          )}\n        </CardMidContent>\n        <Flex justifyContent=\"space-between\">\n          <Heading color=\"contrast\" size=\"lg\">\n            in Farms\n          </Heading>\n          <NavLink exact activeClassName=\"active\" to=\"/farms\">\n            <ArrowForwardIcon mt={30} color=\"primary\" />\n          </NavLink>\n        </Flex>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default EarnAPYCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport orderBy from 'lodash/orderBy'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon } from '@pizzafinance/ui-sdk'\nimport { NavLink } from 'react-router-dom'\nimport pools from 'config/constants/pools'\nimport { Pool } from 'state/types'\n\nconst StyledFarmStakingCard = styled(Card)`\n  background: linear-gradient(#EF4E7B, #6445DD);\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ size: 'xl' })`\n  line-height: 44px;\n`\nconst EarnAssetCard = () => {\n  const latestPools: Pool[] = orderBy(pools, ['sortOrder', 'pid'], ['desc', 'desc']).slice(0, 2)\n\n  // Always include PIZZA\n  const assets = ['PIZZA', ...latestPools.map((pool) => pool.tokenName)].join(', ')\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading color=\"contrast\" size=\"lg\">\n          Earn\n        </Heading>\n        <CardMidContent color=\"invertedContrast\">{assets}</CardMidContent>\n        <Flex justifyContent=\"space-between\">\n          <Heading color=\"contrast\" size=\"lg\">\n            in Pools\n          </Heading>\n          <NavLink exact activeClassName=\"active\" to=\"/pools\">\n            <ArrowForwardIcon mt={30} color=\"primary\" />\n          </NavLink>\n        </Flex>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default EarnAssetCard\n","import { usePricePizzaBusd } from 'state/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalRewards } from './useTickets'\n\nconst useLotteryTotalPrizesUsd = () => {\n  const totalRewards = useTotalRewards()\n  const totalPizza = getBalanceNumber(totalRewards)\n  const pizzaPriceBusd = usePricePizzaBusd()\n\n  return totalPizza * pizzaPriceBusd.toNumber()\n}\n\nexport default useLotteryTotalPrizesUsd\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon } from '@pizzafinance/ui-sdk'\nimport { NavLink } from 'react-router-dom'\nimport useLotteryTotalPrizesUsd from 'hooks/useLotteryTotalPrizesUsd'\n\nconst StyledFarmStakingCard = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ size: 'xl' })`\n  line-height: 44px;\n`\nconst WinCard = () => {\n  const lotteryPrize = Math.round(useLotteryTotalPrizesUsd()).toLocaleString()\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading color=\"contrast\" size=\"lg\">\n          Lottery with\n        </Heading>\n        <CardMidContent color=\"#EF4E7B\">${lotteryPrize}</CardMidContent>\n        <Flex justifyContent=\"space-between\">\n          <Heading color=\"contrast\" size=\"lg\">\n            up for grabs\n          </Heading>\n          <NavLink exact activeClassName=\"active\" to=\"/lottery\">\n            <ArrowForwardIcon mt={30} color=\"primary\" />\n          </NavLink>\n        </Flex>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default WinCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, BaseLayout } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\nimport Page from 'components/layout/Page'\nimport PizzaStats from './components/PizzaStats'\nimport FarmStakingCard from './components/FarmStakingCard'\nimport LotteryCard from './components/LotteryCard'\nimport TotalValueLockedCard from './components/TotalValueLockedCard'\nimport EarnAPYCard from './components/EarnAPYCard'\nimport EarnAssetCard from './components/EarnAssetCard'\nimport WinCard from './components/WinCard'\n\nconst Hero = styled.div`\n  align-items: center;\n  background-image: url('/images/pizza-bg-mobile.svg');\n  background-repeat: no-repeat;\n  background-position: top center;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n  margin-bottom: 32px;\n  padding-top: 116px;\n  text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    background-image: url('/images/home-bg.svg'), url('/images/home-bg2.svg');\n    background-position: left center, right center;\n    height: 165px;\n    padding-top: 0;\n  }\n`\n\nconst Cards = styled(BaseLayout)`\n  align-items: stretch;\n  justify-content: stretch;\n  margin-bottom: 48px;\n\n  & > div {\n    grid-column: span 6;\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst CTACards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 4;\n    }\n  }\n`\n\nconst Home: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Page>\n      <Hero>\n        <Heading as=\"h1\" size=\"xl\" mb=\"24px\" color=\"secondary\">\n          {TranslateString(576, 'PizzaFinance')}\n        </Heading>\n        <Text>{TranslateString(578, 'The Best Modern Yield Farm on Binance Smart Chain.')}</Text>\n      </Hero>\n      <div>\n      <Cards>\n        <FarmStakingCard />\n        <LotteryCard />\n      </Cards>\n      <CTACards>\n        <EarnAPYCard />\n        <EarnAssetCard />\n        <WinCard />\n      </CTACards>\n      <Cards>\n        <PizzaStats />\n        <TotalValueLockedCard />\n      </Cards>\n      </div>\n    </Page>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pizzafinance/ui-sdk'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? 'Hide' : 'Details'}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\n// Each part of the url represents a different side of the LP pair.\n// In the URL, using the quote token 'BNB' is represented by 'ETH'\nconst getLiquidityUrlPathParts = ({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses }) => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const firstPart = quoteTokenSymbol === 'BNB' ? 'ETH' : quoteTokenAdresses[chainId]\n  const secondPart = tokenAddresses[chainId]\n  return `${firstPart}/${secondPart}`\n}\n\nexport default getLiquidityUrlPathParts\n","import React from 'react'\nimport useI18n from 'hooks/useI18n'\nimport styled from 'styled-components'\n// import BigNumber from 'bignumber.js'\nimport { Text, Flex, Link, LinkExternal } from '@pizzafinance/ui-sdk'\n// import { Farm } from 'state/types'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\n\nexport interface TokenAddressesObject {\n  56?: string\n  97?: string\n}\n\nexport interface ExpandableSectionProps {\n  bscScanAddress?: string\n  removed?: boolean\n  totalValueFormated?: string\n  lpLabel?: string\n  quoteTokenAdresses?: TokenAddressesObject\n  quoteTokenSymbol?: string\n  tokenAddresses: TokenAddressesObject\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  text-decoration: none;\n  font-weight: normal;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  align-items: center;\n\n  svg {\n    padding-left: 4px;\n    height: 18px;\n    width: auto;\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  bscScanAddress,\n  removed,\n  totalValueFormated,\n  lpLabel,\n  quoteTokenAdresses,\n  quoteTokenSymbol,\n  tokenAddresses,\n}) => {\n  const TranslateString = useI18n()\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\n//  const lpAddress = getLpAddress()\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <Text>{TranslateString(316, 'Stake')}:</Text>\n        <StyledLinkExternal href={`https://cheeseswap.app/#/add/${liquidityUrlPathParts}`}>\n          {lpLabel}\n        </StyledLinkExternal>\n      </Flex>\n      {!removed && (\n     <Flex justifyContent=\"space-between\">\n          <Text>{TranslateString(23, ' ')}</Text>\n      {/*    <StyledLinkExternal href={`https://info.cheeseswap.app/pair/${tokenAddresses}`}>\n            {lpLabel}\n          </StyledLinkExternal> */}\n        </Flex>\n      )}\n      <Flex justifyContent=\"flex-start\">\n        <Link external href={bscScanAddress} bold={false}>\n          {TranslateString(356, 'View on BscScan')}\n        </Link>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Image } from '@pizzafinance/ui-sdk'\nimport { CommunityTag, CoreTag } from 'components/Tags'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  isCommunityFarm?: boolean\n  farmImage?: string\n  tokenSymbol?: string\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 0.25rem;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\n  lpLabel,\n  multiplier,\n  isCommunityFarm,\n  farmImage,\n  tokenSymbol,\n}) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <Image src={`/images/farms/${farmImage}.svg`} alt={tokenSymbol} width={64} height={64} />\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading mb=\"4px\">{lpLabel}</Heading>\n        <Flex justifyContent=\"center\">\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pizzafinance/ui-sdk'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pizzafinance/ui-sdk'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({ stakedBalance, tokenBalance, tokenName, pid }) => {\n  const TranslateString = useI18n()\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n  const displayBalance = rawStakedBalance.toLocaleString()\n\n  const [onPresentDeposit] = useModal(<DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} />)\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\n  )\n\n  const renderStakingButtons = () => {\n    return rawStakedBalance === 0 ? (\n      <Button onClick={onPresentDeposit}>{TranslateString(999, 'Stake LP')}</Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" />\n        </IconButton>\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\n          <AddIcon color=\"primary\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\nimport { useHarvest } from 'hooks/useHarvest'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const TranslateString = useI18n()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n\n  const rawEarningsBalance = getBalanceNumber(earnings)\n  const displayBalance = rawEarningsBalance.toLocaleString()\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      <Button\n        disabled={rawEarningsBalance === 0 || pendingTx}\n        onClick={async () => {\n          setPendingTx(true)\n          await onReward()\n          setPendingTx(false)\n        }}\n      >\n        {TranslateString(999, 'Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import React, { useMemo, useState, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { provider } from 'web3-core'\nimport { getContract } from 'utils/erc20'\nimport { Button, Flex, Text } from '@pizzafinance/ui-sdk'\nimport { Farm } from 'state/types'\nimport { useFarmFromSymbol, useFarmUser } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\nimport { useApprove } from 'hooks/useApprove'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface FarmWithStakedValue extends Farm {\n  apy?: BigNumber\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  ethereum?: provider\n  account?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, ethereum, account }) => {\n  const TranslateString = useI18n()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses } = useFarmFromSymbol(farm.lpSymbol)\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const lpName = farm.lpSymbol.toUpperCase()\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpContract = useMemo(() => {\n    return getContract(ethereum as provider, lpAddress)\n  }, [ethereum, lpAddress])\n\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction stakedBalance={stakedBalance} tokenBalance={tokenBalance} tokenName={lpName} pid={pid} />\n    ) : (\n      <Button mt=\"8px\" fullWidth disabled={requestedApproval} onClick={handleApprove}>\n        {TranslateString(999, 'Approve Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\n          PIZZA\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(999, 'Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {lpName}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(999, 'Staked')}\n        </Text>\n      </Flex>\n      {!account ? <UnlockButton mt=\"8px\" fullWidth /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n","const roundToTwoDp = (number) => Math.round(number * 100) / 100\n\nexport const calculatePizzaEarnedPerThousandDollars = ({ numberOfDays, farmApy, pizzaPrice }) => {\n  // Everything here is worked out relative to a year, with the asset compounding daily\n  const timesCompounded = 365\n  //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const apyAsDecimal = farmApy / 100\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded\n  //   Calculate the starting PIZZA balance with a dollar balance of $1000.\n  const principal = 1000 / pizzaPrice\n\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + apyAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n\n  // To get the pizza earned, deduct the amount after compounding (finalAmount) from the starting PIZZA balance (principal)\n  const interestEarned = finalAmount - principal\n  return roundToTwoDp(interestEarned)\n}\n\nexport const apyModalRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage.toFixed(2)\n}\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { calculatePizzaEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\nimport { Address } from 'config/constants/types'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  lpLabel?: string\n  pizzaPrice?: BigNumber\n  apy?: BigNumber\n  quoteTokenAdresses?: Address\n  quoteTokenSymbol?: string\n  tokenAddresses: Address\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 24px;\n`\n\nconst GridItem = styled.div`\n  margin-bottom: '10px';\n`\n\nconst Description = styled(Text)`\n  max-width: 320px;\n  margin-bottom: 28px;\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  lpLabel,\n  quoteTokenAdresses,\n  quoteTokenSymbol,\n  tokenAddresses,\n  pizzaPrice,\n  apy,\n}) => {\n  const TranslateString = useI18n()\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\n  const farmApy = apy.times(new BigNumber(100)).toNumber()\n  const oneThousandDollarsWorthOfPizza = 1000 / pizzaPrice.toNumber()\n\n  const pizzaEarnedPerThousand1D = calculatePizzaEarnedPerThousandDollars({ numberOfDays: 1, farmApy, pizzaPrice })\n  const pizzaEarnedPerThousand7D = calculatePizzaEarnedPerThousandDollars({ numberOfDays: 7, farmApy, pizzaPrice })\n  const pizzaEarnedPerThousand30D = calculatePizzaEarnedPerThousandDollars({ numberOfDays: 30, farmApy, pizzaPrice })\n  const pizzaEarnedPerThousand365D = calculatePizzaEarnedPerThousandDollars({ numberOfDays: 365, farmApy, pizzaPrice })\n\n  return (\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\n      <Grid>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(999, 'Timeframe')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(999, 'ROI')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(999, 'PIZZA per $1000')}\n          </Text>\n        </GridItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>1d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: pizzaEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfPizza })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{pizzaEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>7d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: pizzaEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfPizza })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{pizzaEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>30d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: pizzaEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfPizza })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{pizzaEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem>\n          <Text>365d(APY)</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: pizzaEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfPizza })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{pizzaEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Description fontSize=\"12px\" color=\"textSubtle\">\n        {TranslateString(\n          999,\n          'Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n        )}\n      </Description>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={`https://cheeseswap.app/#/add/${liquidityUrlPathParts}`}>\n          {TranslateString(999, 'Get')} {lpLabel}\n        </LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { CalculateIcon, IconButton, useModal } from '@pizzafinance/ui-sdk'\nimport { Address } from 'config/constants/types'\nimport ApyCalculatorModal from './ApyCalculatorModal'\n\nexport interface ApyButtonProps {\n  lpLabel?: string\n  pizzaPrice?: BigNumber\n  apy?: BigNumber\n  quoteTokenAdresses?: Address\n  quoteTokenSymbol?: string\n  tokenAddresses: Address\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({\n  lpLabel,\n  quoteTokenAdresses,\n  quoteTokenSymbol,\n  tokenAddresses,\n  pizzaPrice,\n  apy,\n}) => {\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      lpLabel={lpLabel}\n      quoteTokenAdresses={quoteTokenAdresses}\n      quoteTokenSymbol={quoteTokenSymbol}\n      tokenAddresses={tokenAddresses}\n      pizzaPrice={pizzaPrice}\n      apy={apy}\n    />,\n  )\n\n  return (\n    <IconButton onClick={onPresentApyModal} variant=\"text\" size=\"sm\" ml=\"4px\">\n      <CalculateIcon />\n    </IconButton>\n  )\n}\n\nexport default ApyButton\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from '@pizzafinance/ui-sdk'\nimport { communityFarms } from 'config/constants'\nimport { Farm } from 'state/types'\nimport { provider } from 'web3-core'\nimport useI18n from 'hooks/useI18n'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { QuoteToken } from 'config/constants/types'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends Farm {\n  apy?: BigNumber\n}\n\nconst RainbowLight = keyframes`\n\t0% {\n\t\tbackground-position: 0% 50%;\n\t}\n\t50% {\n\t\tbackground-position: 100% 50%;\n\t}\n\t100% {\n\t\tbackground-position: 0% 50%;\n\t}\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 154, 0, 1) 10%,\n    rgba(208, 222, 33, 1) 20%,\n    rgba(79, 220, 74, 1) 30%,\n    rgba(63, 218, 216, 1) 40%,\n    rgba(47, 201, 226, 1) 50%,\n    rgba(28, 127, 238, 1) 60%,\n    rgba(95, 21, 242, 1) 70%,\n    rgba(186, 12, 248, 1) 80%,\n    rgba(251, 7, 217, 1) 90%,\n    rgba(255, 0, 0, 1) 100%\n  );\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 16px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 16px;\n  box-shadow: 0px 0px 10px rgba(9, 31, 67, 0.1);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  removed: boolean\n  pizzaPrice?: BigNumber\n  bnbPrice?: BigNumber\n  ethereum?: provider\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, pizzaPrice, bnbPrice, ethereum, account }) => {\n  const TranslateString = useI18n()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\n  // We assume the token name is coin pair + lp e.g. PIZZA-BNB LP, LINK-BNB LP,\n  // NAR-PIZZA LP. The images should be pizza-bnb.svg, link-bnb.svg, nar-pizza.svg\n  const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\n\n  const totalValue: BigNumber = useMemo(() => {\n    if (!farm.lpTotalInQuoteToken) {\n      return null\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.PIZZA) {\n      return pizzaPrice.times(farm.lpTotalInQuoteToken)\n    }\n    return farm.lpTotalInQuoteToken\n  }, [bnbPrice, pizzaPrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\n\n  const totalValueFormated = totalValue\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PIZZAFINANCE', '')\n  const earnLabel = farm.dual ? farm.dual.earnLabel : 'PIZZA'\n  const farmAPY = farm.apy && farm.apy.times(new BigNumber(100)).toNumber().toLocaleString('en-US').slice(0, -1)\n\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses } = farm\n\n  return (\n    <FCard>\n      {farm.tokenSymbol === 'PIZZA' && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        isCommunityFarm={isCommunityFarm}\n        farmImage={farmImage}\n        tokenSymbol={farm.tokenSymbol}\n      />\n      {!removed && (\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Text>{TranslateString(352, 'APY')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {farm.apy ? (\n              <>\n                <ApyButton\n                  lpLabel={lpLabel}\n                  quoteTokenAdresses={quoteTokenAdresses}\n                  quoteTokenSymbol={quoteTokenSymbol}\n                  tokenAddresses={tokenAddresses}\n                  pizzaPrice={pizzaPrice}\n                  apy={farm.apy}\n                />\n                {farmAPY}%\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"space-between\">\n        <Text>{TranslateString(318, 'Earn')}:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <CardActionsContainer farm={farm} ethereum={ethereum} account={account} />\n      <Divider />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          bscScanAddress={`https://bscscan.com/address/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`}\n          totalValueFormated={totalValueFormated}\n          lpLabel={lpLabel}\n          quoteTokenAdresses={quoteTokenAdresses}\n          quoteTokenSymbol={quoteTokenSymbol}\n          tokenAddresses={tokenAddresses}\n        />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\n\nconst FarmTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React, { useEffect, useCallback } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport { Image, Heading } from '@pizzafinance/ui-sdk'\nimport { BLOCKS_PER_YEAR, PIZZA_PER_BLOCK, PIZZA_POOL_PID } from 'config'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useFarms, usePriceBnbBusd, usePricePizzaBusd } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { QuoteToken } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport Divider from './components/Divider'\n\nconst Farms: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const pizzaPrice = usePricePizzaBusd()\n  const bnbPrice = usePriceBnbBusd()\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X')\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X')\n\n  // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n  const farmsList = useCallback(\n    (farmsToDisplay, removed: boolean) => {\n      const pizzaPriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === PIZZA_POOL_PID)?.tokenPriceVsQuote || 0)\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n          return farm\n        }\n        const pizzaRewardPerBlock = PIZZA_PER_BLOCK.times(farm.poolWeight)\n        const pizzaRewardPerYear = pizzaRewardPerBlock.times(BLOCKS_PER_YEAR)\n\n        let apy = pizzaPriceVsBNB.times(pizzaRewardPerYear).div(farm.lpTotalInQuoteToken)\n\n        if (farm.quoteTokenSymbol === QuoteToken.USDT || farm.quoteTokenSymbol === QuoteToken.USDC) {\n          apy = pizzaPriceVsBNB.times(pizzaRewardPerYear).div(farm.lpTotalInQuoteToken).times(bnbPrice)\n        } else if (farm.quoteTokenSymbol === QuoteToken.PIZZA) {\n          apy = pizzaRewardPerYear.div(farm.lpTotalInQuoteToken)\n        } else if (farm.dual) {\n          const pizzaApy =\n            farm && pizzaPriceVsBNB.times(pizzaRewardPerBlock).times(BLOCKS_PER_YEAR).div(farm.lpTotalInQuoteToken)\n          const dualApy =\n            farm.tokenPriceVsQuote &&\n            new BigNumber(farm.tokenPriceVsQuote)\n              .times(farm.dual.rewardPerBlock)\n              .times(BLOCKS_PER_YEAR)\n              .div(farm.lpTotalInQuoteToken)\n\n          apy = pizzaApy && dualApy && pizzaApy.plus(dualApy)\n        }\n\n        return { ...farm, apy }\n      })\n      return farmsToDisplayWithAPY.map((farm) => (\n        <FarmCard\n          key={farm.pid}\n          farm={farm}\n          removed={removed}\n          bnbPrice={bnbPrice}\n          pizzaPrice={pizzaPrice}\n          ethereum={ethereum}\n          account={account}\n        />\n      ))\n    },\n    [bnbPrice, farmsLP, account, pizzaPrice, ethereum],\n  )\n\n  return (\n    <Page>\n      <Heading as=\"h1\" size=\"lg\" color=\"secondary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        {TranslateString(999, 'Stake Cheese-LP tokens to earn PIZZA')}\n      </Heading>\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        {TranslateString(999, 'CAUTION!: FARMS CALCULATED \"APY\" DATA IS REAL TIME AND AUTOMATICALLY COLLECTED FROM BLOCKCHAIN. DATA MAY NOT BE ACCURATE.')}\n      </Heading>\n      <FarmTabButtons />\n      <div>\n        <Divider />\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            {farmsList(activeFarms, false)}\n          </Route>\n          <Route exact path={`${path}/history`}>\n            {farmsList(inactiveFarms, true)}\n          </Route>\n        </FlexLayout>\n      </div>\n      <Image src=\"/images/farm-bg.svg\" alt=\"PizzaFinance illustration\" width={1080} height={600} responsive />\n    </Page>\n  )\n}\n\nexport default Farms\n","import React from 'react'\n\nexport interface PastLotteryDataState {\n  mostRecentLotteryNumber: number\n  currentLotteryNumber: number\n  historyError: boolean\n  historyData: Array<any>\n}\n\nexport default React.createContext({\n  mostRecentLotteryNumber: 0,\n  historyError: false,\n  historyData: [],\n} as PastLotteryDataState)\n","import { useState, useEffect } from 'react'\n\nexport const useCurrentTime = () => {\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\n\n  useEffect(() => {\n    const tick = () => {\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\n    }\n\n    const timerID = setInterval(() => tick(), 1000)\n\n    return () => clearInterval(timerID)\n  }, [])\n\n  return currentMillis\n}\n\nexport default useCurrentTime\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import getTimePeriods from 'utils/getTimePeriods'\n\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\nconst lotteryDrawHoursUtc = [2, 14]\n\nconst getClosestLotteryHour = (currentHour) => {\n  switch (true) {\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[0]\n    case currentHour < lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[1]\n    default:\n      return 0\n  }\n}\n\nconst getNextLotteryDrawTime = (currentMillis) => {\n  const date = new Date(currentMillis)\n  const currentHour = date.getUTCHours()\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\n  // ...and current time is between 02:00am & 23:59pm UTC\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\n  let millisTimeOfNextDraw\n\n  if (nextLotteryIsTomorrow) {\n    const tomorrow = new Date(currentMillis)\n    const nextDay = tomorrow.getUTCDate() + 1\n    tomorrow.setUTCDate(nextDay)\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\n  } else {\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\n  }\n\n  return millisTimeOfNextDraw\n}\n\n// @ts-ignore\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\n\nexport const getTicketSaleTime = (currentMillis): string => {\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getLotteryDrawTime = (currentMillis): string => {\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getTicketSaleStep = () => (1 / 12) * 100\n\nexport const getLotteryDrawStep = (currentMillis) => {\n  const msBetweenLotteries = 43200000\n  const endTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = endTime - currentMillis\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\n  return 100 - percentageRemaining\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Progress } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport {\n  getLotteryDrawTime,\n  getLotteryDrawStep,\n  getTicketSaleTime,\n  getTicketSaleStep,\n} from '../helpers/CountdownHelpers'\n\nconst ProgressWrapper = styled.div`\n  display: block;\n  width: 100%;\n`\n\nconst TopTextWrapper = styled.div`\n  margin-top: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst BottomTextWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst StyledPrimaryText = styled(Text)`\n  margin-right: 16px;\n`\nconst LotteryProgress = () => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\n\n  return (\n    <ProgressWrapper>\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny />\n      <TopTextWrapper>\n        <StyledPrimaryText fontSize=\"20px\" bold color=\"contrast\">\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\n        </StyledPrimaryText>\n        <Text fontSize=\"20px\" bold color=\"invertedContrast\">\n          {lotteryHasDrawn ? TranslateString(0, 'Until ticket sale') : TranslateString(0, 'Until lottery draw')}\n        </Text>\n      </TopTextWrapper>\n      {lotteryHasDrawn && (\n        <BottomTextWrapper>\n          <Text color=\"invertedContrast\">\n            {timeUntilLotteryDraw} {TranslateString(0, 'Until lottery draw')}\n          </Text>\n        </BottomTextWrapper>\n      )}\n    </ProgressWrapper>\n  )\n}\n\nexport default LotteryProgress\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\nimport Container from 'components/layout/Container'\nimport LotteryProgress from './LotteryProgress'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(180deg, #dcb46d 0%,#d0a860  100%);\n  padding-bottom: 40px;\n  padding-top: 40px;\n`\n\nconst StyledContainer = styled(Container)`\n  display: flex;\n\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  padding-left: 0;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n  }\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n        <LeftWrapper>\n          <Title>{TranslateString(999, 'The PIZZA Lottery')}</Title>\n          <Blurb>{TranslateString(999, 'Buy tickets with PIZZA')}</Blurb>\n          <Blurb>{TranslateString(999, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\n        </LeftWrapper>\n        <RightWrapper>\n          <LotteryProgress />\n        </RightWrapper>\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Loading: React.FC = () => <StyledLoading />\n\nconst StyledLoading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useCallback } from 'react'\nimport { Button, Modal } from '@pizzafinance/ui-sdk'\nimport styled from 'styled-components'\nimport { useWinningNumbers } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\n\ninterface UserTicketsModalProps {\n  myTicketNumbers: Array<any>\n  from?: string\n  onDismiss?: () => void\n}\n\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\n  const winNumbers = useWinningNumbers()\n  const TranslateString = useI18n()\n  const rewardMatch = useCallback(\n    (number) => {\n      let n = 0\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line eqeqeq\n        if (winNumbers[i] == number[i]) n++\n      }\n      return n\n    },\n    [winNumbers],\n  )\n\n  const listItems = myTicketNumbers.map((number, index) => {\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <RewardP key={index}>\n          {emoji}\n          {number.toString()}\n          {emoji}\n        </RewardP>\n      )\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    return <p key={index}>{number.toString()}</p>\n  })\n\n  return (\n    <Modal title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`)} onDismiss={onDismiss}>\n      <TicketsList>\n        <h2>{listItems}</h2>\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        {TranslateString(438, 'Close')}\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst RewardP = styled.div`\n  color: #ff8c28;\n`\n\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default UserTicketsModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Won, useModal } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\nconst PrizesWonContent: React.FC = () => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const TranslateString = useI18n()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <Won />\n      </IconWrapper>\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\n        {TranslateString(999, 'You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" size=\"lg\">\n              PIZZA\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button fullWidth disabled={requestedClaim} onClick={handleClaim}>\n          {TranslateString(999, 'Collect')}\n        </Button>\n      </StyledCardActions>\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n        {TranslateString(432, 'View your tickets')}\n      </StyledButton>\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, useModal } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\nimport useTickets from 'hooks/useTickets'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledText = styled(Text)`\n  padding-left: 12px;\n`\n\nconst Image = styled.img`\n  margin-right: 6px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 20px;\n  }\n`\nconst StyledButton = styled(Button)`\n  padding: 0 12px;\n  height: unset;\n`\n\nconst NoPrizesContent: React.FC = () => {\n  const TranslateString = useI18n()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  return (\n    <Wrapper>\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\n      <TextWrapper>\n        <StyledText color=\"textDisabled\">{TranslateString(999, 'Sorry, no prizes to collect')}</StyledText>\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n          {TranslateString(432, 'View your tickets')}\n        </StyledButton>\n      </TextWrapper>\n    </Wrapper>\n  )\n}\n\nexport default NoPrizesContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pizzafinance/ui-sdk'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport PrizesWonContent from './PrizesWonContent'\nimport NoPrizesContent from './NoPrizesContent'\n\nconst StyledCard = styled(Card)`\n  ${(props) =>\n    props.isDisabled\n      ? `  \n        margin-top: 16px;\n        background-color: unset;\n        box-shadow: unset;\n        border: 1px solid ${props.theme.colors.textDisabled};\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst YourPrizesCard: React.FC = () => {\n  const { claimAmount } = useTotalClaim()\n\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\n    </StyledCard>\n  )\n}\n\nexport default YourPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Ticket } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card isActive>\n      <StyledCardBody>\n        <IconWrapper>\n          <Ticket />\n        </IconWrapper>\n        <StyledHeading size=\"md\">{TranslateString(999, 'Unlock wallet to access lottery')}</StyledHeading>\n        <UnlockButton />\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","import React from 'react'\nimport { Button, Modal } from '@pizzafinance/ui-sdk'\nimport ModalActions from 'components/ModalActions'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\n\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\n      <TicketsList>\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\n        <br />\n        {TranslateString(470, 'Your PIZZA will not be returned to you after you spend it to buy tickets.')}\n        <br />\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burnedafter the draw.')}\n        <br />\n        {TranslateString(\n          474,\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\n        )}\n      </TicketsList>\n      <ModalActions>\n        <Button fullWidth onClick={onDismiss}>\n          {TranslateString(476, 'I understand')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst TicketsList = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nexport default WarningModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useLotteryAllowance } from 'hooks/useAllowance'\nimport { useLotteryApprove } from 'hooks/useApprove'\nimport useTickets from 'hooks/useTickets'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getPizzaAddress } from 'utils/addressHelpers'\nimport BuyTicketModal from './BuyTicketModal'\nimport MyTicketsModal from './UserTicketsModal'\nimport PurchaseWarningModal from './PurchaseWarningModal'\n\nconst CardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    justify-content: space-between;\n  }\n`\n\nconst TicketCard: React.FC = () => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const TranslateString = useI18n()\n  const allowance = useLotteryAllowance()\n  const { onApprove } = useLotteryApprove()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const pizzaBalance = useTokenBalance(getPizzaAddress())\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const [onPresentBuy] = useModal(<BuyTicketModal max={pizzaBalance} tokenName=\"PIZZA\" />)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n      onPresentApprove()\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, onPresentApprove])\n\n  const renderLotteryTicketButtons = () => {\n    if (!allowance.toNumber()) {\n      return (\n        <>\n          <Button fullWidth disabled>\n            {TranslateString(432, 'View your tickets')}\n          </Button>\n          <Button fullWidth disabled={requestedApproval} onClick={handleApprove}>\n            {TranslateString(999, 'Approve PIZZA')}\n          </Button>\n        </>\n      )\n    }\n    return (\n      <>\n        <Button\n          style={{ marginRight: '8px' }}\n          fullWidth\n          disabled={ticketsLength === 0}\n          variant=\"secondary\"\n          onClick={onPresentMyTickets}\n        >\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n        <Button id=\"lottery-buy-start\" fullWidth onClick={onPresentBuy}>\n          {TranslateString(430, 'Buy ticket')}\n        </Button>\n      </>\n    )\n  }\n\n  return (\n    <CardActions>\n      {lotteryHasDrawn ? (\n        <Button disabled> {TranslateString(999, 'On sale')}</Button>\n      ) : (\n        renderLotteryTicketButtons()\n      )}\n    </CardActions>\n  )\n}\n\nexport default TicketCard\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { usePizza, useLottery } from './useContract'\nimport { getAllowance } from '../utils/erc20'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account }: { account: string } = useWallet()\n  const lotteryContract = useLottery()\n  const pizzaContract = usePizza()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await getAllowance(pizzaContract, lotteryContract, account)\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && pizzaContract && pizzaContract) {\n      fetchAllowance()\n    }\n    const refreshInterval = setInterval(fetchAllowance, 10000)\n    return () => clearInterval(refreshInterval)\n  }, [account, pizzaContract, lotteryContract])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\n  const { account }: { account: string } = useWallet()\n  const [allowance, setAllowance] = useState(null)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        setAllowance(null)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, TicketRound, Text, Heading } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTickets from 'hooks/useTickets'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport TicketActions from './TicketActions'\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\n\ninterface CardProps {\n  isSecondCard?: boolean\n}\n\nconst StyledCard = styled(Card)<CardProps>`\n  ${(props) =>\n    props.isSecondCard\n      ? `  \n        margin-top: 16px;\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst CardHeader = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst TicketCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\n\n  return (\n    <StyledCard isSecondCard={isSecondCard}>\n      <CardBody>\n        <CardHeader>\n          <IconWrapper>\n            <TicketRound />\n          </IconWrapper>\n          {lotteryHasDrawn ? (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(999, 'Until ticket sale:')}\n              </Text>\n              <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\n            </TicketCountWrapper>\n          ) : (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(999, 'Your tickets for this round')}\n              </Text>\n              <Heading size=\"lg\">{ticketsLength}</Heading>\n            </TicketCountWrapper>\n          )}\n        </CardHeader>\n        <TicketActions />\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { Heading, Text } from '@pizzafinance/ui-sdk'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const TranslateString = useI18n()\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(999, 'No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n            {TranslateString(999, 'Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(999, 'Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading size=\"md\">4</Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\n      </GridItem>\n      {/* 3 matches row */}\n      <GridItem>\n        <Text bold>3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem marginBottom=\"20px\">\n        <Text>2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem marginBottom=\"20px\">\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem marginBottom=\"20px\">\n        <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText>\n      </GridItem>\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading, Card, CardBody, CardFooter, Text, PizzaRoundIcon, Flex, Skeleton } from '@pizzafinance/ui-sdk'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { useTotalRewards } from 'hooks/useTickets'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\nimport PrizeGrid from '../PrizeGrid'\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Right = styled.div`\n  display: flex;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst Left = styled.div`\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst PrizeCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 100%;\n  }\n`\n\nconst TotalPrizesCard = () => {\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const [showFooter, setShowFooter] = useState(false)\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  return (\n    <Card>\n      <CardBody>\n        {account && (\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\n            {currentLotteryNumber > 0 && (\n              <>\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>{`Round #${currentLotteryNumber}`}</Text>\n              </>\n            )}\n          </Flex>\n        )}\n        <CardHeading>\n          <Left>\n            <IconWrapper>\n              <PizzaRoundIcon />\n            </IconWrapper>\n            <PrizeCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(999, 'Total Pot:')}\n              </Text>\n              <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} PIZZA</Heading>\n            </PrizeCountWrapper>\n          </Left>\n          <Right>\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\n          </Right>\n        </CardHeading>\n      </CardBody>\n      <ExpandingWrapper showFooter={showFooter}>\n        <CardFooter>\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\n        </CardFooter>\n      </ExpandingWrapper>\n    </Card>\n  )\n}\n\nexport default TotalPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Image, Card, CardBody } from '@pizzafinance/ui-sdk'\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\n\nconst WinningNumbers: React.FC = () => {\n  const { account } = useWallet()\n  const winNumbers = useWinningNumbers()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const MatchedNumber4 = useMatchingRewardLength(4)\n  const MatchedNumber3 = useMatchingRewardLength(3)\n  const MatchedNumber2 = useMatchingRewardLength(2)\n  const TranslateString = useI18n()\n\n  return (\n    <CardWrapper>\n      <Card>\n        <CardBody>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n              <Title>\n                {account && lotteryHasDrawn\n                  ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\n                  : TranslateString(572, 'Latest Winning Numbers')}\n              </Title>\n              <br />\n            </StyledCardHeader>\n            <Row>\n              {winNumbers.map((number, index) => (\n                // eslint-disable-next-line react/no-array-index-key\n                <TicketNumberBox key={index}>\n                  <CenteredText>{number}</CenteredText>\n                </TicketNumberBox>\n              ))}\n            </Row>\n            <RabbitRow>\n              <RabbitBox>\n                <CardImageFirst>\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\n                </CardImageFirst>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n            </RabbitRow>\n            <RabbitRowSmall>\n              <RabbitBoxSmall>\n                <CardImageFirst>\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\n                </CardImageFirst>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n            </RabbitRowSmall>\n            <Column>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber4}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber3}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber2}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n            </Column>\n            <Link href=\"https://api.pizzafinance.app/api/lottery?page=0&pageSize=25\" target=\"_blank\">\n              {TranslateString(448, 'Export recent winning numbers')}\n            </Link>\n          </StyledCardContentInner>\n        </CardBody>\n      </Card>\n    </CardWrapper>\n  )\n}\nconst Link = styled.a`\n  margin-top: 1em;\n  text-decoration: none;\n  color: #2ab770;\n`\n\nconst Row = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst RabbitRow = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst RabbitRowSmall = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`\n\nconst CardImage = styled.div`\n  text-align: center;\n`\n\nconst CardImageFirst = styled.div`\n  text-align: center;\n  margin-left: -1.2em;\n\n  @media (max-width: 600) {\n    margin-left: -0.2em;\n  }\n`\n\nconst RowNoPadding = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst Column = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CenteredText = styled.div`\n  text-align: center;\n  align-items: center;\n`\n\nconst CenteredTextWithPadding = styled.div`\n  text-align: center;\n  align-items: center;\n  padding-left: 2px;\n  padding-right: 2px;\n`\n\nconst TicketNumberBox = styled.div`\n  padding: 10px;\n  border-radius: 12px;\n  background: linear-gradient(180deg, #dcb46d 0%, #d0a860  76.22%);\n  color: white;\n  font-size: 20px;\n  font-weight: 900;\n  margin: 10px;\n  margin-bottom: 7px;\n  width: 40px;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    margin: 20px;\n    width: 60px;\n  }\n`\n\nconst RabbitBox = styled.div`\n  /* padding: 10px; */\n  border-radius: 12px;\n  margin: 16px 20px;\n  width: 60px;\n`\n\nconst RabbitBoxSmall = styled.div`\n  padding-top: 10px;\n  padding-left: 10px;\n  border-radius: 12px;\n  margin: 20px;\n  width: 20px;\n`\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CardWrapper = styled.div``\n\nconst Title = styled.div`\n  color: ${(props) => props.theme.colors.secondary};\n  font-size: 24px;\n  width: 50vw;\n  text-align: center;\n  font-weight: 1000;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nexport default WinningNumbers\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Link, Image } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\n\nconst LayoutWrapper = styled.div`\n  max-width: 500px;\n  margin: 0 auto 40px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst StyledImage = styled(Image)`\n  align-self: center;\n`\n\nconst StyledLink = styled(Link)`\n  align-self: center;\n  margin-top: 16px;\n`\n\nconst HowItWorks = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <LayoutWrapper>\n      <StyledImage src=\"/images/pizza-lottery-bg.png\" alt=\"lottery bunny\" width={163} height={140} />\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"secondary\">\n        {TranslateString(999, 'How it works')}\n      </StyledHeading>\n      <Text fontSize=\"16px\">\n        {TranslateString(\n          999,\n          'Spend PIZZA to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\n        )}\n      </Text>\n      <StyledLink href=\"#\">Read more</StyledLink>\n    </LayoutWrapper>\n  )\n}\n\nexport default HowItWorks\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { BaseLayout } from '@pizzafinance/ui-sdk'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport YourPrizesCard from './components/YourPrizesCard'\nimport UnlockWalletCard from './components/UnlockWalletCard'\nimport TicketCard from './components/TicketCard'\nimport TotalPrizesCard from './components/TotalPrizesCard'\nimport WinningNumbers from './components/WinningNumbers'\nimport HowItWorks from './components/HowItWorks'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\n`\n\nconst NextDrawPage: React.FC = () => {\n  const { account } = useWallet()\n  const { claimAmount } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <>\n      <Cards>\n        <div>\n          <TotalPrizesCard />\n        </div>\n        <SecondCardColumnWrapper isAWin={isAWin}>\n          {!account ? (\n            <UnlockWalletCard />\n          ) : (\n            <>\n              <YourPrizesCard />\n              <TicketCard isSecondCard={isAWin} />\n            </>\n          )}\n        </SecondCardColumnWrapper>\n      </Cards>\n      <HowItWorks />\n      {/* legacy page content */}\n      <WinningNumbers />\n    </>\n  )\n}\n\nexport default NextDrawPage\n","export type DataResponse = {\n  lotteryNumber: number\n  lotteryDate: string\n  lotteryNumbers: number[]\n  poolSize: number\n  burned: number\n  contractLink: string\n  jackpotTicket: number\n  match2Ticket: number\n  match3Ticket: number\n  match4Ticket: number\n  poolJackpot: number\n  poolMatch3: number\n  poolMatch2: number\n\n  // TODO: Fill in the error type\n  error: any\n}\n\n/**\n * Get data for a specific lottery\n */\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\n  try {\n    const response = await fetch(`https://api.pizzafinance.app/api/singleLottery?lotteryNumber=${lotteryNumber}`)\n    const data = await response.json()\n\n    return data\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport default getLotteryRoundData\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Button } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const TranslateString = useI18n()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(lotteryNumber)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(evt.currentTarget.value, 10)\n\n    // The max value will always be the initialLotterNumber which equals\n    // the latest lottery round\n    setIsError(value > initialLotteryNumber)\n    setLotteryNumber(value)\n  }\n\n  return (\n    <Wrapper>\n      <Text>{TranslateString(999, 'Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <Input\n            value={lotteryNumber}\n            type=\"number\"\n            isWarning={isError}\n            max={initialLotteryNumber}\n            onChange={handleChange}\n          />\n          <ButtonWrapper>\n            <Button type=\"submit\" size=\"sm\" disabled={isError}>\n              {TranslateString(999, 'Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n","import React from 'react'\nimport { Text } from '@pizzafinance/ui-sdk'\n\ninterface PastRoundCardErrorProps {\n  error: {\n    message: string\n  }\n}\n\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\n  return <Text p=\"24px\">{error.message}</Text>\n}\n\nexport default PastRoundCardError\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text } from '@pizzafinance/ui-sdk'\n\ninterface HeadingProps {\n  valueToDisplay?: string\n  children?: string\n  Icon?: React.ComponentType\n}\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\n  return (\n    <Flex {...props}>\n      {Icon && (\n        <IconWrapper>\n          <Icon />\n        </IconWrapper>\n      )}\n      <Flex flexDirection=\"column\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {children}\n        </Text>\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\n      </Flex>\n    </Flex>\n  )\n}\n\nLotteryCardHeading.defaultProps = {\n  valueToDisplay: '',\n  Icon: () => <div />,\n  children: '',\n}\n\nexport default LotteryCardHeading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, LinkExternal, useModal } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useTickets from 'hooks/useTickets'\nimport UnlockButton from 'components/UnlockButton'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 24px;\n\n  & > div {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst ExternalLinkWrap = styled(LinkExternal)`\n  align-items: center;\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  text-decoration: none;\n  width: 100%;\n`\n\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\n  const TranslateString = useI18n()\n  const tickets = useTickets(lotteryNumber)\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const { account } = useWallet()\n\n  if (!account) {\n    return (\n      <Wrapper>\n        <UnlockButton />\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <div>\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} fullWidth>\n          {TranslateString(999, 'View your tickets')}\n        </Button>\n      </div>\n      <div>\n        <ExternalLinkWrap href={contractLink}>{TranslateString(999, 'View on BSCscan')}</ExternalLinkWrap>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default TicketCard\n","const formatLotteryDate = (lotteryDate: string) => {\n  if (!lotteryDate) {\n    return {}\n  }\n\n  const date = new Date(lotteryDate)\n\n  const dateString = date.toDateString()\n  const hours = date.getUTCHours()\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\n\n  return { hours, monthAndDay }\n}\n\nexport default formatLotteryDate\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pizzafinance/ui-sdk'\nimport formatLotteryDate from '../helpers/formatLotteryDate'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`\n\nconst Timestamp = ({ timeValue }) => {\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\">\n        {monthAndDay}, {hours}:00 UTC\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default Timestamp\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, CardBody, CardFooter, PizzaRoundIcon, TicketRound } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport LotteryCardHeading from '../LotteryCardHeading'\nimport PastLotteryActions from './PastLotteryActions'\nimport PrizeGrid from '../PrizeGrid'\nimport Timestamp from '../Timestamp'\n\ninterface PastRoundCardDetailsProps {\n  data: DataResponse\n}\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\n  const TranslateString = useI18n()\n\n  const {\n    contractLink,\n    jackpotTicket,\n    lotteryDate,\n    lotteryNumber,\n    lotteryNumbers,\n    match2Ticket,\n    match3Ticket,\n    poolSize,\n  } = data\n\n  return (\n    !data.error &&\n    data && (\n      <>\n        <CardBody>\n          <CardHeading>\n            <Timestamp timeValue={lotteryDate} />\n            <Heading size=\"md\" mb=\"24px\">\n              Round #{lotteryNumber}\n            </Heading>\n            <TopLotteryCardHeading\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\n              Icon={TicketRound}\n            >\n              {TranslateString(999, 'Winning numbers')}\n            </TopLotteryCardHeading>\n            <LotteryCardHeading\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} PIZZA`)}\n              Icon={PizzaRoundIcon}\n            >\n              {TranslateString(999, 'Total prizes')}\n            </LotteryCardHeading>\n          </CardHeading>\n        </CardBody>\n        <CardFooter>\n          <PrizeGrid\n            lotteryPrizeAmount={poolSize}\n            jackpotMatches={jackpotTicket}\n            twoTicketMatches={match2Ticket}\n            threeTicketMatches={match3Ticket}\n            pastDraw\n          />\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\n        </CardFooter>\n      </>\n    )\n  )\n}\n\nexport default PastRoundCardDetails\n","import React from 'react'\nimport { Card } from '@pizzafinance/ui-sdk'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport PastRoundCardError from './PastRoundCardError'\nimport PastRoundCardDetails from './PastRoundCardDetails'\n\ninterface PastRoundCardProps {\n  error: {\n    message: string\n  }\n  data: DataResponse\n}\n\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\n}\n\nexport default PastRoundCard\n","import { useContext, useEffect, useState } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\n\ntype GetRecentLotteryRoundDataReturn = {\n  isLoading: boolean\n  data: DataResponse\n  mostRecentLotteryNumber: number\n  error: any\n}\n\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  useEffect(() => {\n    const fetchRecentLotteryData = async () => {\n      try {\n        setIsLoading(true)\n\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\n        setData(roundData)\n      } catch (err) {\n        setError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (mostRecentLotteryNumber > 0) {\n      fetchRecentLotteryData()\n    }\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\n\n  return { isLoading, data, mostRecentLotteryNumber, error }\n}\n\nexport default useGetRecentLotteryRoundData\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pizzafinance/ui-sdk'\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\nimport useI18n from 'hooks/useI18n'\nimport PastLotterySearcher from './PastLotterySearcher'\nimport PastRoundCard from './PastRoundCard'\nimport Loading from '../Loading'\nimport useGetRecentLotteryRoundData from '../../hooks/useGetRecentLotteryRoundData'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`\n\nconst PastLotteryRoundViewer = () => {\n  const [state, setState] = useState({\n    roundData: null,\n    error: { message: null, type: null },\n    isInitialized: false,\n    isLoading: true,\n  })\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\n  const TranslateString = useI18n()\n  const { roundData, error, isInitialized, isLoading } = state\n\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\n    }\n  }, [initialLotteryData, setState])\n\n  const handleSubmit = async (lotteryNumber: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }))\n\n    getLotteryRoundData(lotteryNumber)\n      .then((data) => {\n        if (data.error) {\n          setState((prevState) => ({\n            ...prevState,\n            error: {\n              message: TranslateString(999, 'The lottery number you provided does not exist'),\n              type: 'out of range',\n            },\n            isLoading: false,\n            isInitialized: true,\n          }))\n        } else {\n          setState((prevState) => ({\n            ...prevState,\n            error: { message: null, type: null },\n            roundData: data,\n            isLoading: false,\n            isInitialized: true,\n          }))\n        }\n      })\n      .catch(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: { message: TranslateString(999, 'Error fetching data'), type: 'api' },\n          isLoading: false,\n          isInitialized: true,\n        }))\n      })\n  }\n\n  return (\n    <Wrapper>\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\n      {!isInitialized || isLoading ? (\n        <Card>\n          <StyledCardBody>\n            <Loading />\n          </StyledCardBody>\n        </Card>\n      ) : (\n        <PastRoundCard error={error} data={roundData} />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PastLotteryRoundViewer\n","import React, { lazy, Suspense, useContext } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pizzafinance/ui-sdk'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport Loading from '../Loading'\n\nconst Line = lazy(() => import('./LineChartWrapper'))\n\nconst InnerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst HistoryChart: React.FC = () => {\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\n  const getDataArray = (kind) => {\n    return historyData\n      .map((dataPoint) => {\n        return dataPoint[kind]\n      })\n      .reverse()\n  }\n\n  const lineStyles = ({ color }) => {\n    return {\n      borderColor: color,\n      fill: false,\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHitRadius: 10,\n    }\n  }\n\n  const chartData = {\n    labels: getDataArray('lotteryNumber'),\n    datasets: [\n      {\n        label: 'Pool Size',\n        data: getDataArray('poolSize'),\n        yAxisID: 'y-axis-pool',\n        ...lineStyles({ color: '#DAAF65' }),\n      },\n      {\n        label: 'Burned',\n        data: getDataArray('burned'),\n        yAxisID: 'y-axis-burned',\n        ...lineStyles({ color: '#EF4E7B' }),\n      },\n    ],\n  }\n\n  const axesStyles = ({ color, lineHeight }) => {\n    return {\n      borderCapStyle: 'round',\n      gridLines: { display: false },\n      ticks: {\n        fontFamily: 'Heebo, sans-serif',\n        fontColor: color,\n        fontSize: 14,\n        lineHeight,\n        maxRotation: 0,\n        beginAtZero: true,\n        autoSkipPadding: 15,\n        userCallback: (value) => {\n          return value.toLocaleString()\n        },\n      },\n    }\n  }\n\n  const options = {\n    legend: { display: false },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-pool',\n          ...axesStyles({ color: '#DAAF65', lineHeight: 1.6 }),\n        },\n        {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          id: 'y-axis-burned',\n          ...axesStyles({ color: '#EF4E7B', lineHeight: 1.5 }),\n        },\n      ],\n      xAxes: [\n        {\n          ...axesStyles({ color: '#35A969', lineHeight: 1 }),\n        },\n      ],\n    },\n  }\n\n  return (\n    <>\n      {historyError && (\n        <InnerWrapper>\n          <Text>Error fetching data</Text>\n        </InnerWrapper>\n      )}\n      {!historyError && historyData.length > 1 ? (\n        <Suspense fallback={<div>Loading...</div>}>\n          <Line data={chartData} options={options} type=\"line\" />\n        </Suspense>\n      ) : (\n        <InnerWrapper>\n          <Loading />\n        </InnerWrapper>\n      )}\n    </>\n  )\n}\n\nexport default HistoryChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 36px 0 28px;\n`\n\nconst LegendItem = styled.div`\n  display: flex;\n  margin-right: 18px;\n  align-items: center;\n`\n\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\n  margin-right: 6px;\n`\n\nconst Legend = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <LegendItem>\n        <Circle isPoolSize />\n        <Text>{TranslateString(999, 'Pool Size')}</Text>\n      </LegendItem>\n      <LegendItem>\n        <Circle />\n        <Text>{TranslateString(999, 'Burned')}</Text>\n      </LegendItem>\n    </Wrapper>\n  )\n}\n\nexport default Legend\n","import React from 'react'\nimport { Heading, Card, CardBody } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\nimport HistoryChart from './HistoryChart'\nimport Legend from './Legend'\n\nconst PastDrawsHistoryCard: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <CardBody>\n        <Heading size=\"md\">{TranslateString(999, 'History')}</Heading>\n        <Legend />\n        <HistoryChart />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default PastDrawsHistoryCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout } from '@pizzafinance/ui-sdk'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: column;\n`\n\nconst BunnyImageWrapper = styled.div`\n  display: flex;\n  margin-top: 32px;\n  justify-content: center;\n`\n\nconst PastDrawsPage: React.FC = () => {\n  return (\n    <Cards>\n      <PastLotteryRoundViewer />\n      <SecondCardColumnWrapper>\n        <PastDrawsHistoryCard />\n        <BunnyImageWrapper>\n          <img src=\"/images/pizza-lottery-bg.png\" alt=\"lottery pizza\" />\n        </BunnyImageWrapper>\n      </SecondCardColumnWrapper>\n    </Cards>\n  )\n}\n\nexport default PastDrawsPage\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem } from '@pizzafinance/ui-sdk'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport useI18n from 'hooks/useI18n'\nimport { useLottery } from 'hooks/useContract'\nimport Page from 'components/layout/Page'\nimport Hero from './components/Hero'\nimport Divider from './components/Divider'\nimport NextDrawPage from './NextDrawPage'\nimport PastDrawsPage from './PastDrawsPage'\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 32px;\n`\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useLottery()\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  useEffect(() => {\n    fetch(`https://api.pizzafinance.app/api/lotteryHistory`)\n      .then((response) => response.json())\n      .then((data) => setHistoryData(data))\n      .catch(() => {\n        setHistoryError(true)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (account && lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [account, lotteryContract])\n\n  const handleClick = (index) => {\n    setActiveIndex(index)\n  }\n\n  return (\n    <>\n      <Hero />\n      <Page>\n        <Wrapper>\n          <ButtonMenu activeIndex={activeIndex} onClick={handleClick} size=\"sm\" variant=\"subtle\">\n            <ButtonMenuItem>{TranslateString(999, 'Next draw')}</ButtonMenuItem>\n            <ButtonMenuItem>{TranslateString(999, 'Past draws')}</ButtonMenuItem>\n          </ButtonMenu>\n        </Wrapper>\n        <Divider />\n        <PastLotteryDataContext.Provider\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\n        >\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\n        </PastLotteryDataContext.Provider>\n      </Page>\n    </>\n  )\n}\n\nexport default Lottery\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pizzafinance/ui-sdk'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 39px;\n`\n\nconst IfoTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          Next IDO\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          Past IDOs\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default IfoTabButtons\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@pizzafinance/ui-sdk'\nimport Container from 'components/layout/Container'\nimport useI18n from 'hooks/useI18n'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(180deg, #dcb46d 0%, #d0a860 100%);\n  padding-bottom: 40px;\n  padding-top: 40px;\n  margin-bottom: 32px;\n`\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <Container>\n        <Title>{TranslateString(500, 'IDO: Initial DeFi Offerings')}</Title>\n        <Blurb>{TranslateString(502, 'Buy new tokens with a brand new token sale model.')}</Blurb>\n      </Container>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, Flex } from '@pizzafinance/ui-sdk'\n\ninterface IfoCardHeaderProps {\n  ifoId: string\n  name: string\n  subTitle: string\n}\n\nconst StyledIfoCardHeader = styled(Flex)`\n  & > div {\n    flex: 1;\n  }\n`\n\nconst Name = styled(Heading).attrs({ as: 'h3', size: 'lg' })`\n  margin-bottom: 4px;\n  text-align: right;\n`\n\nconst Description = styled(Text)`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  text-align: right;\n`\n\nconst IfoCardHeader: React.FC<IfoCardHeaderProps> = ({ ifoId, name, subTitle }) => {\n  return (\n    <StyledIfoCardHeader mb=\"24px\" alignItems=\"center\">\n      <img src={`/images/idos/${ifoId}.svg`} alt={ifoId} width=\"64px\" height=\"64px\" />\n      <div>\n        <Name>{name}</Name>\n        <Description>{subTitle}</Description>\n      </div>\n    </StyledIfoCardHeader>\n  )\n}\n\nexport default IfoCardHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Progress } from '@pizzafinance/ui-sdk'\n\ninterface IfoCardProgressProps {\n  progress: number\n}\n\nconst StyledProgress = styled.div`\n  margin-bottom: 16px;\n`\n\nconst IfoCardProgress: React.FC<IfoCardProgressProps> = ({ progress }) => {\n  return (\n    <StyledProgress>\n      <Progress primaryStep={progress} />\n    </StyledProgress>\n  )\n}\n\nexport default IfoCardProgress\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardDescriptionProps {\n  defaultIsOpen?: boolean\n  description: string\n}\n\nconst StyledIfoCardDescription = styled.div`\n  margin-top: 24px;\n  margin-bottom: 24px;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90%;\n`\n\nconst ToggleButton = styled.button`\n  background: transparent;\n  border: none;\n  color: ${({ theme }) => theme.colors.primary};\n  cursor: pointer;\n  display: block;\n  font-weight: 600;\n  outline: 0;\n  padding: 24px 16px;\n  width: 100%;\n`\n\nconst Description = styled(Text)<{ isOpen: boolean }>`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  display: ${({ isOpen }) => (isOpen ? 'block' : 'none')};\n`\n\nconst IfoCardDescription: React.FC<IfoCardDescriptionProps> = ({ defaultIsOpen = true, description }) => {\n  const [isOpen, setIsOpen] = useState(defaultIsOpen)\n  const TranslateString = useI18n()\n\n  const handleClick = () => setIsOpen(!isOpen)\n\n  return (\n    <StyledIfoCardDescription>\n      <Divider />\n      <ToggleButton onClick={handleClick}>\n        {isOpen ? TranslateString(999, 'Hide') : TranslateString(999, 'Show')}\n      </ToggleButton>\n      <Description isOpen={isOpen}>{description}</Description>\n    </StyledIfoCardDescription>\n  )\n}\n\nexport default IfoCardDescription\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, LinkExternal, Link } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardDetailsProps {\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  pizzaToBurn: string\n  projectSiteUrl: string\n  raisingAmount: BigNumber\n  totalAmount: BigNumber\n}\n\nconst StyledIfoCardDetails = styled.div`\n  margin-bottom: 24px;\n`\n\nconst Item = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.secondary};\n  display: flex;\n`\n\nconst Display = styled(Text)`\n  flex: 1;\n`\n\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({\n  launchDate,\n  launchTime,\n  saleAmount,\n  raiseAmount,\n  pizzaToBurn,\n  projectSiteUrl,\n  raisingAmount,\n  totalAmount,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <StyledIfoCardDetails>\n        <Item>\n          <Display>{TranslateString(582, 'Launch Time')}</Display>\n          <Text>\n            {launchDate},\n            <Link\n              href=\"https://www.timeanddate.com/worldclock/timezone/utc\"\n              target=\"blank\"\n              rel=\"noopener noreferrer\"\n              ml=\"4px\"\n              style={{ display: 'inline' }}\n            >\n              {launchTime}\n            </Link>\n          </Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(584, 'For Sale')}</Display>\n          <Text>{saleAmount}</Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(999, 'To raise (USD)')}</Display>\n          <Text>{raiseAmount}</Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(586, 'PIZZA to burn (USD)')}</Display>\n          <Text>{pizzaToBurn}</Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(999, 'Total raised (% of target)')}</Display>\n          <Text>{`${totalAmount.div(raisingAmount).times(100).toFixed(2)}%`}</Text>\n        </Item>\n      </StyledIfoCardDetails>\n      <LinkExternal href={projectSiteUrl} style={{ margin: 'auto' }}>\n        {TranslateString(412, 'View project site')}\n      </LinkExternal>\n    </>\n  )\n}\n\nexport default IfoCardDetails\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, Text } from '@pizzafinance/ui-sdk'\nimport { IfoStatus } from 'config/constants/types'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardTimeProps {\n  isLoading: boolean\n  status: IfoStatus\n  secondsUntilStart: number\n  secondsUntilEnd: number\n  block: number\n}\n\nconst Details = styled.div`\n  align-items: center;\n  display: flex;\n  height: 24px;\n  justify-content: center;\n  margin-bottom: 24px;\n`\n\nconst Countdown = styled.div`\n  color: ${({ theme }) => theme.colors.secondary};\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n`\n\nconst IfoCardTime: React.FC<IfoCardTimeProps> = ({ isLoading, status, secondsUntilStart, secondsUntilEnd, block }) => {\n  const TranslateString = useI18n()\n  const countdownToUse = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\n  const timeUntil = getTimePeriods(countdownToUse)\n  const suffix = status === 'coming_soon' ? 'start' : 'finish'\n\n  if (isLoading) {\n    return <Details>{TranslateString(656, 'Loading...')}</Details>\n  }\n\n  if (countdownToUse <= 0) {\n    return (\n      <Details>\n        <Text bold>{TranslateString(999, 'Finished!')}</Text>\n      </Details>\n    )\n  }\n\n  return (\n    <Details>\n      <Countdown>{`${timeUntil.days}d, ${timeUntil.hours}h, ${timeUntil.minutes}m until ${suffix}`}</Countdown>\n      <Link href={`https://bscscan.com/block/countdown/${block}`} target=\"blank\" rel=\"noopener noreferrer\" ml=\"8px\">\n        (blocks)\n      </Link>\n    </Details>\n  )\n}\n\nexport default IfoCardTime\n","import React, { ButtonHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text } from '@pizzafinance/ui-sdk'\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n  value: string\n  label?: string\n  buttonLabel: string\n  disabled?: boolean\n}\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: solid 1px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border-color: ${({ theme }) => theme.colors.borderColor};\n  padding-left: 16px;\n`\n\nconst LabelButton: React.FC<Props> = ({ value, label, buttonLabel, onClick, disabled = false }) => {\n  return (\n    <div>\n      {label && (\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {label}\n        </Text>\n      )}\n      <ButtonWrapper>\n        <Text bold fontSize=\"20px\">\n          {value}\n        </Text>\n        <Button onClick={onClick} disabled={disabled}>\n          {buttonLabel}\n        </Button>\n      </ButtonWrapper>\n    </div>\n  )\n}\n\nexport default LabelButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pizzafinance/ui-sdk'\nimport useI18n from 'hooks/useI18n'\nimport Input, { InputProps } from './Input'\n\ninterface Props extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n}\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nconst BalanceInput: React.FC<Props> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${symbol} Available`)}</StyledMaxText>\n    </div>\n  )\n}\n\nexport default BalanceInput\n","import React, { useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Modal, Button, Flex, LinkExternal } from '@pizzafinance/ui-sdk'\nimport BalanceInput from 'components/Input/BalanceInput'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface Props {\n  currency: string\n  contract: any\n  currencyAddress: string\n  onDismiss?: () => void\n}\n\nconst ContributeModal: React.FC<Props> = ({ currency, contract, currencyAddress, onDismiss }) => {\n  const [value, setValue] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWallet()\n  const balance = getFullDisplayBalance(useTokenBalance(currencyAddress))\n\n  return (\n    <Modal title={`Contribute ${currency}`} onDismiss={onDismiss}>\n      <BalanceInput\n        value={value}\n        onChange={(e) => setValue(e.currentTarget.value)}\n        symbol={currency}\n        max={balance}\n        onSelectMax={() => setValue(balance.toString())}\n      />\n      <Flex justifyContent=\"space-between\" mb=\"24px\">\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss} mr=\"8px\">\n          Cancel\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await contract.methods\n              .deposit(new BigNumber(value).times(new BigNumber(10).pow(18)).toString())\n              .send({ from: account })\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          Confirm\n        </Button>\n      </Flex>\n      <LinkExternal\n        href=\"https://cheeseswap.app/#/add/ETH/0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB\"\n        style={{ margin: 'auto' }}\n      >\n        {`Get ${currency}`}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default ContributeModal\n","import React, { useState, useEffect } from 'react'\nimport { useModal, Button, Text } from '@pizzafinance/ui-sdk'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Contract } from 'web3-eth-contract'\nimport { useERC20 } from 'hooks/useContract'\nimport { useIfoAllowance } from 'hooks/useAllowance'\nimport { useIfoApprove } from 'hooks/useApprove'\nimport { IfoStatus } from 'config/constants/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport LabelButton from './LabelButton'\nimport ContributeModal from './ContributeModal'\n\nexport interface Props {\n  address: string\n  currency: string\n  currencyAddress: string\n  contract: Contract\n  status: IfoStatus\n  raisingAmount: BigNumber\n  tokenDecimals: number\n}\n\nconst IfoCardContribute: React.FC<Props> = ({\n  address,\n  currency,\n  currencyAddress,\n  contract,\n  status,\n  raisingAmount,\n  tokenDecimals,\n}) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const [offeringTokenBalance, setOfferingTokenBalance] = useState(new BigNumber(0))\n  const [userInfo, setUserInfo] = useState({ amount: 0, claimed: false })\n\n  const { account } = useWallet()\n  const contractRaisingToken = useERC20(currencyAddress)\n  const allowance = useIfoAllowance(contractRaisingToken, address, pendingTx)\n  const onApprove = useIfoApprove(contractRaisingToken, address)\n  const [onPresentContributeModal] = useModal(\n    <ContributeModal currency={currency} contract={contract} currencyAddress={currencyAddress} />,\n  )\n\n  useEffect(() => {\n    const fetch = async () => {\n      const balance = new BigNumber(await contract.methods.getOfferingAmount(account).call())\n      const userinfo = await contract.methods.userInfo(account).call()\n\n      setUserInfo(userinfo)\n      setOfferingTokenBalance(balance)\n    }\n\n    if (account) {\n      fetch()\n    }\n  }, [account, contract.methods, pendingTx])\n\n  if (allowance === null) {\n    return null\n  }\n\n  const claim = async () => {\n    setPendingTx(true)\n    await contract.methods.harvest().send({ from: account })\n    setPendingTx(false)\n  }\n  const isFinished = status === 'finished'\n  const percentOfUserContribution = new BigNumber(userInfo.amount).div(raisingAmount).times(100)\n\n  if (allowance <= 0) {\n    return (\n      <Button\n        fullWidth\n        disabled={pendingTx || isFinished}\n        onClick={async () => {\n          try {\n            setPendingTx(true)\n            await onApprove()\n            setPendingTx(false)\n          } catch (e) {\n            setPendingTx(false)\n            console.error(e)\n          }\n        }}\n      >\n        Approve\n      </Button>\n    )\n  }\n\n  return (\n    <>\n      <LabelButton\n        disabled={pendingTx || userInfo.claimed}\n        buttonLabel={isFinished ? 'Claim' : 'Contribute'}\n        label={isFinished ? 'Your tokens to claim' : `Your contribution (${currency})`}\n        value={\n          // eslint-disable-next-line no-nested-ternary\n          isFinished\n            ? userInfo.claimed\n              ? 'Claimed'\n              : getBalanceNumber(offeringTokenBalance, tokenDecimals).toFixed(4)\n            : getBalanceNumber(new BigNumber(userInfo.amount)).toFixed(4)\n        }\n        onClick={isFinished ? claim : onPresentContributeModal}\n      />\n      <Text fontSize=\"14px\" color=\"textSubtle\">\n        {isFinished\n          ? `You'll be refunded any excess tokens when you claim`\n          : `${percentOfUserContribution.toFixed(5)}% of total`}\n      </Text>\n    </>\n  )\n}\n\nexport default IfoCardContribute\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, CardRibbon } from '@pizzafinance/ui-sdk'\nimport { BSC_BLOCK_TIME } from 'config'\nimport { Ifo, IfoStatus } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { useIfoContract } from 'hooks/useContract'\nimport UnlockButton from 'components/UnlockButton'\nimport IfoCardHeader from './IfoCardHeader'\nimport IfoCardProgress from './IfoCardProgress'\nimport IfoCardDescription from './IfoCardDescription'\nimport IfoCardDetails from './IfoCardDetails'\nimport IfoCardTime from './IfoCardTime'\nimport IfoCardContribute from './IfoCardContribute'\n\nexport interface IfoCardProps {\n  ifo: Ifo\n}\n\nconst StyledIfoCard = styled(Card)<{ ifoId: string }>`\n  background-image: ${({ ifoId }) => `url('/images/idos/${ifoId}-bg.svg')`};\n  background-repeat: no-repeat;\n  background-size: contain;\n  padding-top: 112px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 437px;\n  width: 100%;\n`\n\nconst getStatus = (currentBlock: number, startBlock: number, endBlock: number): IfoStatus | null => {\n  if (currentBlock < startBlock) {\n    return 'coming_soon'\n  }\n\n  if (currentBlock >= startBlock && currentBlock <= endBlock) {\n    return 'live'\n  }\n\n  if (currentBlock > endBlock) {\n    return 'finished'\n  }\n\n  return null\n}\n\nconst getRibbonComponent = (status: IfoStatus, TranslateString: (translationId: number, fallback: string) => any) => {\n  if (status === 'coming_soon') {\n    return <CardRibbon variantColor=\"textDisabled\" text={TranslateString(999, 'Coming Soon')} />\n  }\n\n  if (status === 'live') {\n    return <CardRibbon variantColor=\"primary\" text={TranslateString(999, 'LIVE NOW!')} />\n  }\n\n  return null\n}\n\nconst IfoCard: React.FC<IfoCardProps> = ({ ifo }) => {\n  const {\n    id,\n    address,\n    name,\n    subTitle,\n    description,\n    launchDate,\n    launchTime,\n    saleAmount,\n    raiseAmount,\n    pizzaToBurn,\n    projectSiteUrl,\n    currency,\n    currencyAddress,\n    tokenDecimals,\n    releaseBlockNumber,\n  } = ifo\n  const [state, setState] = useState({\n    isLoading: true,\n    status: null,\n    blocksRemaining: 0,\n    secondsUntilStart: 0,\n    progress: 0,\n    secondsUntilEnd: 0,\n    raisingAmount: new BigNumber(0),\n    totalAmount: new BigNumber(0),\n    startBlockNum: 0,\n    endBlockNum: 0,\n  })\n  const { account } = useWallet()\n  const contract = useIfoContract(address)\n\n  const currentBlock = useBlock()\n  const TranslateString = useI18n()\n\n  const Ribbon = getRibbonComponent(state.status, TranslateString)\n\n  useEffect(() => {\n    const fetchProgress = async () => {\n      const [startBlock, endBlock, raisingAmount, totalAmount] = await Promise.all([\n        contract.methods.startBlock().call(),\n        contract.methods.endBlock().call(),\n        contract.methods.raisingAmount().call(),\n        contract.methods.totalAmount().call(),\n      ])\n\n      const startBlockNum = parseInt(startBlock, 10)\n      const endBlockNum = parseInt(endBlock, 10)\n\n      const status = getStatus(currentBlock, startBlockNum, endBlockNum)\n      const totalBlocks = endBlockNum - startBlockNum\n      const blocksRemaining = endBlockNum - currentBlock\n\n      // Calculate the total progress until finished or until start\n      const progress =\n        currentBlock > startBlockNum\n          ? ((currentBlock - startBlockNum) / totalBlocks) * 100\n          : ((currentBlock - releaseBlockNumber) / (startBlockNum - releaseBlockNumber)) * 100\n\n      setState({\n        isLoading: false,\n        secondsUntilEnd: blocksRemaining * BSC_BLOCK_TIME,\n        secondsUntilStart: (startBlockNum - currentBlock) * BSC_BLOCK_TIME,\n        raisingAmount: new BigNumber(raisingAmount),\n        totalAmount: new BigNumber(totalAmount),\n        status,\n        progress,\n        blocksRemaining,\n        startBlockNum,\n        endBlockNum,\n      })\n    }\n\n    fetchProgress()\n  }, [currentBlock, contract, releaseBlockNumber, setState])\n\n  const isActive = state.status === 'live'\n  const isFinished = state.status === 'finished'\n\n  return (\n    <StyledIfoCard ifoId={id} ribbon={Ribbon} isActive={isActive}>\n      <CardBody>\n        <IfoCardHeader ifoId={id} name={name} subTitle={subTitle} />\n        <IfoCardProgress progress={state.progress} />\n        <IfoCardTime\n          isLoading={state.isLoading}\n          status={state.status}\n          secondsUntilStart={state.secondsUntilStart}\n          secondsUntilEnd={state.secondsUntilEnd}\n          block={isActive || isFinished ? state.endBlockNum : state.startBlockNum}\n        />\n        {!account && <UnlockButton fullWidth />}\n        {(isActive || isFinished) && (\n          <IfoCardContribute\n            address={address}\n            currency={currency}\n            currencyAddress={currencyAddress}\n            contract={contract}\n            status={state.status}\n            raisingAmount={state.raisingAmount}\n            tokenDecimals={tokenDecimals}\n          />\n        )}\n        <IfoCardDescription description={description} />\n        <IfoCardDetails\n          launchDate={launchDate}\n          launchTime={launchTime}\n          saleAmount={saleAmount}\n          raiseAmount={raiseAmount}\n          pizzaToBurn={pizzaToBurn}\n          projectSiteUrl={projectSiteUrl}\n          raisingAmount={state.raisingAmount}\n          totalAmount={state.totalAmount}\n        />\n      </CardBody>\n    </StyledIfoCard>\n  )\n}\n\nexport default IfoCard\n","import styled from 'styled-components'\nimport { Heading } from '@pizzafinance/ui-sdk'\n\nconst Title = styled(Heading).attrs({ size: 'lg' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 16px;\n`\n\nexport default Title\n","import styled from 'styled-components'\n\ninterface IfoCardWrapperProps {\n  isSingle?: boolean\n}\n\nconst IfoCardWrapper = styled.div<IfoCardWrapperProps>`\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  padding-bottom: 40px;\n  padding-top: 40px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: ${({ isSingle }) => `repeat(${isSingle ? 1 : 2}, 1fr)`};\n  }\n`\n\nIfoCardWrapper.defaultProps = {\n  isSingle: true,\n}\n\nexport default IfoCardWrapper\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, BaseLayout, Button, LinkExternal, Flex, Image } from '@pizzafinance/ui-sdk'\nimport { ifosConfig } from 'config/constants'\nimport useI18n from 'hooks/useI18n'\nimport IfoCard from './components/IfoCard'\nimport Title from './components/Title'\nimport IfoCards from './components/IfoCards'\n\nconst LaunchIfoCallout = styled(BaseLayout)`\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  margin: 0 auto;\n  padding: 32px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1fr 1fr;\n  }\n`\n\nconst List = styled.ul`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n\n  & > li {\n    line-height: 1.4;\n    margin-bottom: 8px;\n  }\n`\n\n/**\n * Note: currently there should be only 1 active IFO at a time\n */\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\n\nconst Ifo = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <IfoCards isSingle>\n        <IfoCard ifo={activeIfo} />\n      </IfoCards>\n      <LaunchIfoCallout>\n        <div>\n          <Title as=\"h2\">{TranslateString(592, 'How to take part')}</Title>\n          <Heading mb=\"16px\">{TranslateString(594, 'Before Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(596, 'Buy PIZZA and BNB tokens')}</li>\n            <li>{TranslateString(598, 'Get PIZZA-BNB LP tokens by adding PIZZA and BNB liquidity')}</li>\n          </List>\n          <Flex mb=\"16px\">\n            <LinkExternal href=\"https://cheeseswap.app/#/swap?inputCurrency=0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c&outputCurrency=0x2cc26dd730f548dc4ac291ae7d84a0c96980d2cb\" mr=\"16px\">\n              {TranslateString(999, 'Buy Pizza')}\n            </LinkExternal>\n            <LinkExternal href=\"https://swap.pizzafinance.app/#/add/ETH/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\">\n              {TranslateString(999, 'Get LP tokens')}\n            </LinkExternal>\n          </Flex>\n          <Heading mb=\"16px\">{TranslateString(600, 'During Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(602, 'While the sale is live, commit your Cheese-LP tokens to buy the IDO tokens')}</li>\n          </List>\n          <Heading mb=\"16px\">{TranslateString(604, 'After Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(606, 'Claim the tokens you bought, along with any unspent funds.')}</li>\n            <li>{TranslateString(608, 'Done!')}</li>\n          </List>\n          <Text as=\"div\" pt=\"16px\">\n            <Button\n              as=\"a\"\n              variant=\"secondary\"\n              href=\"https://t.me/PizzaFinance\"\n            >\n              {TranslateString(610, 'Read more')}\n            </Button>\n          </Text>\n        </div>\n        <div>\n          <Image src=\"/images/ido-shop.svg\" alt=\"ido shop\" width={436} height={406} responsive />\n          <div>\n            <Title as=\"h2\">{TranslateString(512, 'Want to launch your own IDO?')}</Title>\n            <Text mb={3}>\n              {TranslateString(\n                514,\n                'Launch your project with PizzaFinance, Binance Smart Chain’s most-used AMM project and liquidity provider, to bring your token directly to the most active and rapidly growing community on BSC.',\n              )}\n            </Text>\n            <Button\n              as=\"a\"\n              href=\"https://docs.google.com/forms/d/e/1FAIpQLSfQxi51mWTkB5bdH8_op_xFVpZMBMTM5HqswZRI2xLXtT5FsA/viewform\"\n              external\n            >\n              {TranslateString(516, 'Apply to launch')}\n            </Button>\n          </div>\n        </div>\n      </LaunchIfoCallout>\n    </div>\n  )\n}\n\nexport default Ifo\n","import React from 'react'\nimport { ifosConfig } from 'config/constants'\nimport { Ifo } from 'config/constants/types'\nimport IfoCard from './components/IfoCard'\nimport IfoCards from './components/IfoCards'\n\nconst inactiveIfo: Ifo[] = ifosConfig.filter((ifo) => !ifo.isActive)\n\nconst PastIfo = () => {\n  return (\n    <IfoCards>\n      {inactiveIfo.map((ifo) => (\n        <IfoCard key={ifo.id} ifo={ifo} />\n      ))}\n    </IfoCards>\n  )\n}\n\nexport default PastIfo\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport Container from 'components/layout/Container'\nimport IfoTabButtons from './components/IfoTabButtons'\nimport Hero from './components/Hero'\nimport CurrentIfo from './CurrentIfo'\nimport PastIfo from './PastIfo'\n\nconst Ifos = () => {\n  const { path } = useRouteMatch()\n\n  return (\n    <>\n      <Hero />\n      <Container>\n        <IfoTabButtons />\n        <Route exact path={`${path}`}>\n          <CurrentIfo />\n        </Route>\n        <Route path={`${path}/history`}>\n          <PastIfo />\n        </Route>\n      </Container>\n    </>\n  )\n}\n\nexport default Ifos\n","import React, { Suspense, useEffect, lazy } from 'react'\nimport { HashRouter, Route, Switch, Router  } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@pizzafinance/ui-sdk'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\n\nimport Pools from './views/Pools'\nimport Home from './views/Home'\nimport Farms from './views/Farms'\nimport Lottery from './views/Lottery'\nimport Ifos from './views/Ifos'\n\n\n// const Home = lazy(() => import('./views/Home'))\n// const Farms = lazy(() => import('./views/Farms'))\n// const Lottery = lazy(() => import('./views/Lottery'))\n// const Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n// const Nft = lazy(() => import('./views/Nft'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  useFetchPublicData()\n\n  return (\n    <Suspense fallback={null}>\n     <HashRouter>\n\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n              <Route path=\"/ido\">\n              <Ifos />\n            </Route>\n             <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n          </HashRouter>\n    </Suspense>\n  )\n}\n\nexport default React.memo(App)\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    pools: poolsReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@pizzafinance/ui-sdk'\nimport bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <UseWalletProvider\n            chainId={parseInt(process.env.REACT_APP_CHAIN_ID)}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n"],"sourceRoot":""}